{"version":3,"sources":["assets/images/help_center.jpg","utils/util.js","utils/env.js","utils/request.js","api/index.js","view/secret/components/layout.js","view/secret/components/powerionicsLayout.js","utils/recorder.js","view/secret/components/writeForm.js","view/secret/components/previewForm.js","view/secret/write.js","view/secret/check.js","routes/index.js","view/secret/helpCenter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","time","cFormat","date","format","replace","length","parseInt","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","result","key","value","queryUrlParam","str","name","reg","RegExp","indexOf","r","split","match","setLocal","window","localStorage","setItem","getLocal","getItem","removeLocal","removeItem","isWeiXin","navigator","userAgent","toLowerCase","staticHost2ApiHost","localhost","location","hostname","pending","cancelToken","axios","CancelToken","removePending","config","u","url","method","f","splice","service","create","baseURL","params","interceptors","request","use","toast_default","loading","c","push","error","Promise","reject","response","res","data","hide","console","log","code","info","JSON","stringify","message","saveSecret","uploadAudio","file","headers","Content-Type","uploadImage","getCodeUrl","getBgUrl","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","search","props","history","pathname","token","getAuth","getToken","then","setTimeout","redirectUri","encodeURIComponent","concat","href","react_default","createElement","icon_default","type","React","Component","bgUrl","id","routes","map","route","index","react_router","exact","path","render","component","assign","Recorder","source","cfg","bufferLen","numChannels","mimeType","recording","callbacks","getBuffer","exportWAV","context","node","createScriptProcessor","createJavaScriptNode","onaudioprocess","e","buffer","channel","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","InlineWorker","sampleRate","recLength","recBuffers","initBuffers","mergeBuffers","Float32Array","offset","set","writeString","view","string","setUint8","charCodeAt","onmessage","record","interleaved","buffers","inputL","inputR","inputIndex","interleave","dataview","samples","ArrayBuffer","DataView","setUint32","setUint16","output","input","Math","max","min","setInt16","floatTo16BitPCM","encodeWAV","audioBlob","Blob","cb","pop","createClass","callback","Error","blob","filename","URL","webkitURL","createObjectURL","link","document","download","click","createEvent","initEvent","dispatchEvent","alert","modal_default","WriteForm","previewResult","recorder","setAudioUrl","setState","audioStatus","clear","_this$state","clearTimeout","timer","func","_this$state2","setInterval","timeup","clearInterval","stopRecording","text","onPress","audio_context","AudioContext","webkitAudioContext","getUserMedia","webkitGetUserMedia","mediaDevices","audio","stream","startUserMedia","catch","form","getFieldsValue","reload","onChange","files","formData","FormData","append","setImageFile","createMediaStreamSource","stop","getFieldProps","_this$props$formData","say_to_you","_this$props$formData$","username","order_code","mobile","captcha_val","captcha_url","className","list_default","renderHeader","onClick","textarea_item_default","rows","initialValue","rules","required","image_picker_default","onImageClick","fs","previewImg","selectable","multiple","input_item_default","placeholder","src","button_default","createForm","PreviewForm","playAudio","getElementById","volume","audioPlayStatus","play","pause","disabled","imgFileId","previewFlag","previewImgArr","previewImgIndex","codeUrl","addAudioListenner","addEventListener","_this3","created_at","audioUrl","imgUrl","WriteSecre","rel_image","previewClose","formSubmit","values","wechat_token","thumb","captcha_key","codeKey","success","audioBlod","writeForm","validateFields","force","errors","x","resultPreviewFlag","objectSpread","returnEdit","codeLock","img","dist_default","onClose","urls","previewForm","wrappedComponentRef","CheckSecre","check_status","secretInfo","onSubmit","phone","toString","getInfo","gotoHelpCenter","rel_audio","rel_thumb","size","target","layout","helpImage","powerionicsLayout","writeSecret","checkSecret","isLocalhost","Boolean","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDom","react_router_dom","querySelector","process","origin","fetch","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4bc9e70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/help_center.ba972945.jpg\";","//格式化时间\r\nconst parseTime = (time, cFormat) => {\r\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n  let date\r\n  if (typeof time === 'object') {\r\n    date = time\r\n  } else {\r\n    time = time.replace(/-/g, '/')\r\n    if (('' + time).length === 10) time = parseInt(time) * 1000\r\n    date = new Date(time)\r\n  }\r\n  const formatObj = {\r\n    y: date.getFullYear(),\r\n    m: date.getMonth() + 1,\r\n    d: date.getDate(),\r\n    h: date.getHours(),\r\n    i: date.getMinutes(),\r\n    s: date.getSeconds(),\r\n    a: date.getDay()\r\n  }\r\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n    let value = formatObj[key]\r\n    // Note: getDay() returns 0 on Sunday\r\n    if (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }\r\n    if (result.length > 0 && value < 10) {\r\n      value = '0' + value\r\n    }\r\n    return value || 0\r\n  })\r\n  return time_str\r\n}\r\n/**\r\n* 获取queryString*\r\n*/\r\nconst queryUrlParam = (str, name) => {\r\n  var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\r\n  if (str.indexOf('?') >= 0) {\r\n    var r = str.split(\"?\")[1].match(reg);\r\n    if (r != null) return (r[2]);\r\n    return null;\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * 本地储存\r\n * @param {*} key \r\n * @param {*} value \r\n */\r\nconst setLocal = (key, value) => {\r\n  return window.localStorage.setItem(key, value)\r\n}\r\n\r\n/**\r\n * 获取本地储存\r\n * @param {*} key \r\n */\r\nconst getLocal = (key) => {\r\n  return window.localStorage.getItem(key)\r\n}\r\n\r\n/**\r\n * 移除某个本地储存\r\n * @param {*} key \r\n */\r\nconst removeLocal = (key) => {\r\n  return window.localStorage.removeItem(key)\r\n}\r\n\r\n\r\n\r\n//判断是否是微信浏览器的函数\r\nconst isWeiXin = () => {\r\n  //window.navigator.userAgent属性包含了浏览器类型、版本、操作系统类型、浏览器引擎类型等信息，这个属性可以用来判断浏览器类型\r\n  let ua = window.navigator.userAgent.toLowerCase();\r\n  //通过正则表达式匹配ua中是否含有MicroMessenger字符串\r\n  if (ua.match(/MicroMessenger/i) == 'micromessenger') {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  parseTime,\r\n  queryUrlParam,\r\n  setLocal,\r\n  getLocal,\r\n  removeLocal,\r\n  isWeiXin\r\n}","export function staticHost2ApiHost() {\r\n    var mHost = window.location.hostname\r\n    return {\r\n        'localhost': 'https://symy.powerionics.com',\r\n    }[mHost] || 'https://symy.powerionics.com'\r\n}","import axios from 'axios'\r\nimport { staticHost2ApiHost } from './env'\r\nimport { Toast } from 'antd-mobile';\r\n// axios.defaults.withCredentials = true;\r\n\r\nlet pending = []; //声明一个数组用于存储每个ajax请求的取消函数和ajax标识\r\nlet cancelToken = axios.CancelToken;\r\nlet removePending = (config) => {\r\n    for(let p in pending){\r\n        if(pending[p].u == config.url + '&' + config.method) { //当当前请求在数组中存在时执行函数体\r\n            pending[p].f(); //执行取消操作\r\n            pending.splice(p, 1); //把这条记录从数组中移除\r\n        }\r\n    }\r\n}\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: staticHost2ApiHost(), // api 的 base_url\r\n  // timeout: 5000, // 请求超时时间\r\n  // headers: {\r\n  //   'Content-Type': 'application/json',\r\n  //   'X-Requested-With': 'XMLHttpRequest',\r\n  // },\r\n  params: {}\r\n})\r\n// request拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    Toast.loading('', 0)\r\n    removePending(config); //在一个ajax发送前执行一下取消操作\r\n    config.cancelToken = new cancelToken((c)=>{\r\n        // 这里的ajax标识我是用请求地址&请求方式拼接的字符串，当然你可以选择其他的一些方式\r\n        pending.push({ u: config.url + '&' + config.method, f: c });  \r\n    });\r\n    // Object.assign(config.params,{requestId:new Date().getTime()+''+parseInt(Math.random*1000),appType:20})\r\n    return config\r\n  },\r\n  error => {\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\n// response 拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    let res = response.data;\r\n    Toast.hide()\r\n    console.log(res)\r\n    removePending(response.config);  //在一个ajax响应后再执行一下取消操作，把已经完成的请求从pending中移除\r\n    if (res.code != 0) {\r\n      Toast.info(JSON.stringify(res),1)\r\n      return Promise.reject(res)\r\n    } else {\r\n      return response.data\r\n    }\r\n  },\r\n  error => {\r\n    Toast.hide()\r\n    Toast.info(error.message,1)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","import request from '@/utils/request'\r\n\r\nconst getSecret = (mobile) => {\r\n  return request({\r\n    url: '/api/speech/info-mobile',\r\n    method: 'get',\r\n    params: {\r\n      mobile\r\n    }\r\n  })\r\n}\r\n\r\n\r\nconst saveSecret = (data) => {\r\n  return request({\r\n    url: '/api/speech',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * 上传语音\r\n * @param {*} data \r\n */\r\nconst uploadAudio = (file) => {\r\n  return request({\r\n    url: '/static/ueditor/1.4.3.3/php/controller.php?action=uploadvideo',\r\n    method: 'post',\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    data: file\r\n  })\r\n}\r\n\r\n/**\r\n * 上传图片\r\n * @param {*} file \r\n */\r\nconst uploadImage = (file) => {\r\n  return request({\r\n    url: '/static/ueditor/1.4.3.3/php/controller.php?action=uploadimage',\r\n    method: 'post',\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    data: file\r\n  })\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取验证码\r\n */\r\nconst getCodeUrl = () => {\r\n  return request({\r\n    url: '/captcha/api',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取背景图片\r\n */\r\nconst getBgUrl = () => {\r\n  return request({\r\n    url: '/api/back-image',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * 获取token\r\n */\r\nconst getToken = (code) => {\r\n  return request({\r\n    url: '/api/wechat-token',\r\n    method: 'get',\r\n    params:{\r\n      code\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport {\r\n  getSecret,\r\n  saveSecret,\r\n  uploadAudio,\r\n  uploadImage,\r\n  getCodeUrl,\r\n  getBgUrl,\r\n  getToken\r\n}","import React from 'react'\r\nimport {Icon} from 'antd-mobile'\r\nimport { queryUrlParam, getLocal, isWeiXin, setLocal } from '@/utils/util'\r\nimport { getToken } from '@/api'\r\nexport default class extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        let code = queryUrlParam(window.location.search, 'code');\r\n        console.log(this.props.history.location)\r\n        console.log(window.location.search)\r\n        console.log(code)\r\n        if (this.props.location.pathname != '/powerionics/check') {\r\n            if (isWeiXin()) {\r\n                //微信浏览器需要跳转授权获取code\r\n                let token = getLocal('_secret_wx_token')\r\n                if (!token) {\r\n                    if (!code) {\r\n                        this.getAuth()\r\n                        return;\r\n                    } else {\r\n                        getToken(code).then(res => {\r\n                            token = res.data\r\n                            setLocal('_secret_wx_token', token)\r\n                            console.log('..........///token')\r\n                            console.log(token)\r\n                            setTimeout(() => {\r\n                                this.props.history.push('/powerionics/write')\r\n                            }, 100)\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.props.history.push('/powerionics/write')\r\n                }\r\n            } else {\r\n                this.props.history.push('/powerionics/write')\r\n            }\r\n        }\r\n    }\r\n    getAuth() {\r\n        let appid = 'wx3edc25d22618f5e9';\r\n        appid = 'wx77dc39692260dd64'\r\n        let redirectUri = encodeURIComponent('http://meinvbingyue.vipgz1.idcfengye.com/secret/');\r\n        // let paramsCode = queryUrlParam(window.location.search, 'code');\r\n        // let code = sessionStorage.getItem('code')\r\n        // if (!paramsCode && !code) {\r\n            let url = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appid}&redirect_uri=${redirectUri}&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect`\r\n            window.location.href = url\r\n        // } else if(!code){\r\n        //     sessionStorage.setItem('code', paramsCode)\r\n        //     window.history.back()\r\n        // }\r\n    }\r\n    render() {\r\n        return <Icon type=\"loading\"></Icon>\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { queryUrlParam, getLocal, isWeiXin } from '@/utils/util'\r\nimport { staticHost2ApiHost } from '@/utils/env'\r\nimport { getBgUrl } from '@/api'\r\nimport '../styles/layout.scss'\r\nimport '../styles/form.scss'\r\n\r\nexport default class extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            bgUrl: ''\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        let bgUrl = queryUrlParam(this.props.history.location.search, 'bg');\r\n        \r\n        if (bgUrl) {\r\n            \r\n        } else {\r\n            if (this.props.location.pathname != '/powerionics/check') {\r\n                if (isWeiXin()) {\r\n                    //微信浏览器需要跳转授权获取code\r\n                    let token = getLocal('_secret_wx_token')\r\n                    if (!token) {\r\n                        this.props.history.push('/')\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n   \r\n    render() {\r\n        // const { bgUrl } = this.state\r\n        // const bgStyle = {\r\n        //     backgroundImage: `url(${bgUrl})`,\r\n        // }\r\n        return (\r\n            <div id=\"secret-wrap\">\r\n                {\r\n                    this.props.routes.map((route, index) => {\r\n                        return <Route key={index} exact={route.exact} path={route.path} render={props => (\r\n                            <route.component {...props} routes={route.routes} />\r\n                        )} ></Route>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import InlineWorker from 'inline-worker';\r\n\r\nexport class Recorder {\r\n    config = {\r\n        bufferLen: 4096,\r\n        numChannels: 2,\r\n        mimeType: 'audio/wav'\r\n    };\r\n\r\n    recording = false;\r\n\r\n    callbacks = {\r\n        getBuffer: [],\r\n        exportWAV: []\r\n    };\r\n\r\n    constructor(source, cfg) {\r\n        Object.assign(this.config, cfg);\r\n        this.context = source.context;\r\n        this.node = (this.context.createScriptProcessor ||\r\n        this.context.createJavaScriptNode).call(this.context,\r\n            this.config.bufferLen, this.config.numChannels, this.config.numChannels);\r\n\r\n        this.node.onaudioprocess = (e) => {\r\n            if (!this.recording) return;\r\n\r\n            var buffer = [];\r\n            for (var channel = 0; channel < this.config.numChannels; channel++) {\r\n                buffer.push(e.inputBuffer.getChannelData(channel));\r\n            }\r\n            this.worker.postMessage({\r\n                command: 'record',\r\n                buffer: buffer\r\n            });\r\n        };\r\n\r\n        source.connect(this.node);\r\n        this.node.connect(this.context.destination);    //this should not be necessary\r\n\r\n        let self = {};\r\n        this.worker = new InlineWorker(function () {\r\n            let recLength = 0,\r\n                recBuffers = [],\r\n                sampleRate,\r\n                numChannels;\r\n\r\n            this.onmessage = function (e) {\r\n                switch (e.data.command) {\r\n                    case 'init':\r\n                        init(e.data.config);\r\n                        break;\r\n                    case 'record':\r\n                        record(e.data.buffer);\r\n                        break;\r\n                    case 'exportWAV':\r\n                        exportWAV(e.data.type);\r\n                        break;\r\n                    case 'getBuffer':\r\n                        getBuffer();\r\n                        break;\r\n                    case 'clear':\r\n                        clear();\r\n                        break;\r\n                }\r\n            };\r\n\r\n            function init(config) {\r\n                sampleRate = config.sampleRate;\r\n                numChannels = config.numChannels;\r\n                initBuffers();\r\n            }\r\n\r\n            function record(inputBuffer) {\r\n                for (var channel = 0; channel < numChannels; channel++) {\r\n                    recBuffers[channel].push(inputBuffer[channel]);\r\n                }\r\n                recLength += inputBuffer[0].length;\r\n            }\r\n\r\n            function exportWAV(type) {\r\n                let buffers = [];\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n                }\r\n                let interleaved;\r\n                if (numChannels === 2) {\r\n                    interleaved = interleave(buffers[0], buffers[1]);\r\n                } else {\r\n                    interleaved = buffers[0];\r\n                }\r\n                let dataview = encodeWAV(interleaved);\r\n                let audioBlob = new Blob([dataview], {type: type});\r\n\r\n                this.postMessage({command: 'exportWAV', data: audioBlob});\r\n            }\r\n\r\n            function getBuffer() {\r\n                let buffers = [];\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n                }\r\n                this.postMessage({command: 'getBuffer', data: buffers});\r\n            }\r\n\r\n            function clear() {\r\n                recLength = 0;\r\n                recBuffers = [];\r\n                initBuffers();\r\n            }\r\n\r\n            function initBuffers() {\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    recBuffers[channel] = [];\r\n                }\r\n            }\r\n\r\n            function mergeBuffers(recBuffers, recLength) {\r\n                let result = new Float32Array(recLength);\r\n                let offset = 0;\r\n                for (let i = 0; i < recBuffers.length; i++) {\r\n                    result.set(recBuffers[i], offset);\r\n                    offset += recBuffers[i].length;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function interleave(inputL, inputR) {\r\n                let length = inputL.length + inputR.length;\r\n                let result = new Float32Array(length);\r\n\r\n                let index = 0,\r\n                    inputIndex = 0;\r\n\r\n                while (index < length) {\r\n                    result[index++] = inputL[inputIndex];\r\n                    result[index++] = inputR[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function floatTo16BitPCM(output, offset, input) {\r\n                for (let i = 0; i < input.length; i++, offset += 2) {\r\n                    let s = Math.max(-1, Math.min(1, input[i]));\r\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n                }\r\n            }\r\n\r\n            function writeString(view, offset, string) {\r\n                for (let i = 0; i < string.length; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            function encodeWAV(samples) {\r\n                let buffer = new ArrayBuffer(44 + samples.length * 2);\r\n                let view = new DataView(buffer);\r\n\r\n                /* RIFF identifier */\r\n                writeString(view, 0, 'RIFF');\r\n                /* RIFF chunk length */\r\n                view.setUint32(4, 36 + samples.length * 2, true);\r\n                /* RIFF type */\r\n                writeString(view, 8, 'WAVE');\r\n                /* format chunk identifier */\r\n                writeString(view, 12, 'fmt ');\r\n                /* format chunk length */\r\n                view.setUint32(16, 16, true);\r\n                /* sample format (raw) */\r\n                view.setUint16(20, 1, true);\r\n                /* channel count */\r\n                view.setUint16(22, numChannels, true);\r\n                /* sample rate */\r\n                view.setUint32(24, sampleRate, true);\r\n                /* byte rate (sample rate * block align) */\r\n                view.setUint32(28, sampleRate * 4, true);\r\n                /* block align (channel count * bytes per sample) */\r\n                view.setUint16(32, numChannels * 2, true);\r\n                /* bits per sample */\r\n                view.setUint16(34, 16, true);\r\n                /* data chunk identifier */\r\n                writeString(view, 36, 'data');\r\n                /* data chunk length */\r\n                view.setUint32(40, samples.length * 2, true);\r\n\r\n                floatTo16BitPCM(view, 44, samples);\r\n\r\n                return view;\r\n            }\r\n        }, self);\r\n\r\n        this.worker.postMessage({\r\n            command: 'init',\r\n            config: {\r\n                sampleRate: this.context.sampleRate,\r\n                numChannels: this.config.numChannels\r\n            }\r\n        });\r\n\r\n        this.worker.onmessage = (e) => {\r\n            let cb = this.callbacks[e.data.command].pop();\r\n            if (typeof cb == 'function') {\r\n                cb(e.data.data);\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    record() {\r\n        this.recording = true;\r\n    }\r\n\r\n    stop() {\r\n        this.recording = false;\r\n    }\r\n\r\n    clear() {\r\n        this.worker.postMessage({command: 'clear'});\r\n    }\r\n\r\n    getBuffer(cb) {\r\n        cb = cb || this.config.callback;\r\n        if (!cb) throw new Error('Callback not set');\r\n\r\n        this.callbacks.getBuffer.push(cb);\r\n\r\n        this.worker.postMessage({command: 'getBuffer'});\r\n    }\r\n\r\n    exportWAV(cb, mimeType) {\r\n        mimeType = mimeType || this.config.mimeType;\r\n        cb = cb || this.config.callback;\r\n        if (!cb) throw new Error('Callback not set');\r\n\r\n        this.callbacks.exportWAV.push(cb);\r\n\r\n        this.worker.postMessage({\r\n            command: 'exportWAV',\r\n            type: mimeType\r\n        });\r\n    }\r\n\r\n    static\r\n    forceDownload(blob, filename) {\r\n        let url = (window.URL || window.webkitURL).createObjectURL(blob);\r\n        let link = window.document.createElement('a');\r\n        link.href = url;\r\n        link.download = filename || 'output.wav';\r\n        let click = document.createEvent(\"Event\");\r\n        click.initEvent(\"click\", true, true);\r\n        link.dispatchEvent(click);\r\n    }\r\n}\r\n\r\nexport default Recorder;\r\n","import React from 'react'\r\nimport { Modal, List, InputItem, Toast, ImagePicker, TextareaItem, Button } from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport Recorder from '@/utils/recorder';\r\nimport { setLocal, removeLocal } from '@/utils/util'\r\nimport { uploadImage } from '@/api'\r\nconst alert = Modal.alert;\r\n\r\nclass WriteForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            recorder: null,\r\n            audioStatus: 0,\r\n            time:30000\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // let cacheData = getLocal('_secret_');\r\n        // if (cacheData) {\r\n        //     cacheData = JSON.parse(cacheData)\r\n        //     this.setState({\r\n        //         ...cacheData\r\n        //     })\r\n        //     removeLocal('_secret_')\r\n        // }\r\n        this.timeup = this.state.time\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    startUserMedia(audio_context, stream, callback) {\r\n        let input = audio_context.createMediaStreamSource(stream);\r\n        this.setState({\r\n            recorder: new Recorder(input)\r\n        }, () => {\r\n            callback && callback()\r\n        })\r\n    }\r\n\r\n    stopRecording() {\r\n        let { recorder } = this.state;\r\n        recorder.stop();\r\n        this.setState({\r\n            audioStatus: 0\r\n        })\r\n\r\n        recorder.getBuffer((res) => {\r\n            console.log(res)\r\n        })\r\n\r\n        // recorder.exportWAV((blob) => {\r\n        //     this.props.setAudioUrl(blob)\r\n        //     this.setState({\r\n        //         audioStatus:0\r\n        //     })\r\n        // });\r\n\r\n        // recorder.clear();\r\n    }\r\n\r\n    previewResult = () => {\r\n        let { recorder } = this.state;\r\n        recorder.exportWAV((blob) => {\r\n            this.props.setAudioUrl(blob)\r\n            this.setState({\r\n                audioStatus: 0\r\n            })\r\n        });\r\n        recorder.clear();\r\n    }\r\n\r\n    record = () => {\r\n        let { audioStatus, recorder } = this.state;\r\n        clearTimeout(this.timer)\r\n        console.log(recorder)\r\n        // return false;\r\n        const func = () => {\r\n            let { audioStatus, recorder } = this.state;\r\n            if (audioStatus == 0 || audioStatus == 2) {\r\n                this.setState({\r\n                    audioStatus: 1\r\n                })\r\n                recorder.record();\r\n                clearTimeout(this.timer)\r\n                this.timer = setInterval(() => {\r\n                    this.timeup = this.timeup - 1000;\r\n                    if (this.timeup <= 0) {\r\n                        clearInterval(this.timer);\r\n                        this.stopRecording()\r\n                    }\r\n                }, 1000)\r\n            } else if (audioStatus == 1) {\r\n                this.stopRecording()\r\n            }\r\n        }\r\n        if (this.timeup <= 0) {\r\n\r\n            alert('', '您的录音已经超过30秒，是否重新录制？', [\r\n                { text: '否', onPress: () => console.log('cancel') },\r\n                { text: '是', onPress: () => {\r\n                    this.timeup = this.state.time;\r\n                    recorder.clear();\r\n                    this.record()\r\n                } },\r\n            ])\r\n\r\n        } else {\r\n\r\n            if (audioStatus == 0 && !recorder) {\r\n                let audio_context = null\r\n                try {\r\n                    // webkit shim\r\n                    window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n                    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;\r\n                    window.URL = window.URL || window.webkitURL;\r\n\r\n                    audio_context = new AudioContext;\r\n                    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\r\n                        removeLocal('_secret_')\r\n                        this.startUserMedia(audio_context, stream, func)\r\n                    }).catch(e => {\r\n                        setLocal('_secret_', JSON.stringify(this.props.form.getFieldsValue()))\r\n                        window.location.reload();\r\n                    });\r\n                } catch (e) {\r\n                    Toast.info('该浏览器不支持录音,请用其他浏览器打开')\r\n                }\r\n\r\n            } else {\r\n                func()\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onChange = (files, type, index) => {\r\n        if (files.length != 0) {\r\n            let file = files[0].file;\r\n            let formData = new FormData();\r\n            formData.append('upfile', file)\r\n            uploadImage(formData).then(data => {\r\n                this.props.setImageFile(files, data)\r\n            })\r\n        } else {\r\n            this.props.setImageFile(files)\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { audioStatus } = this.state\r\n        const { getFieldProps } = this.props.form;\r\n        let { say_to_you, files = [], username, order_code, mobile, captcha_val, captcha_url } = this.props.formData;\r\n\r\n        return (\r\n            <form className=\"my-form wirte-form\">\r\n                <List className=\"audio-list\" renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">我想对您说：</p>\r\n                            <p>可选项,录制您想对TA说的话,限30秒内!</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <div className=\"audio-wrap\">\r\n                        <p onClick={this.record} className={audioStatus == 0 ? 'btn start' : 'btn pause'}></p>\r\n                    </div>\r\n                </List>\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">写给TA：</p>\r\n                            <p>填写您想对TA说的话,不限字数!</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <TextareaItem\r\n                        rows=\"4\"\r\n                        {...getFieldProps('say_to_you', {\r\n                            initialValue: say_to_you,\r\n                            rules: [\r\n                                { required: true, message: '请输入对TA说的话' },\r\n                            ],\r\n                        })}\r\n                    ></TextareaItem>\r\n                </List>\r\n\r\n                <List className=\"no-bg bg-list\" renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">永恒一刻：</p>\r\n                            <p>选填项！上传您想分享的图片，可选择上传或不上传！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <ImagePicker\r\n                        files={files}\r\n                        onChange={this.onChange}\r\n                        onImageClick={(index, fs) => this.props.previewImg(fs[0].url)}\r\n                        selectable={files.length < 1}\r\n                        multiple={false}\r\n                    />\r\n                </List>\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">送卡人姓名/昵称：</p>\r\n                            <p>选填项！如果您不想让对方知道是谁，可不填！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        {...getFieldProps('username', {\r\n                            initialValue: username\r\n                        })}\r\n                    ></InputItem>\r\n\r\n                </List>\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">powerionics淘宝或京东订单编号：</p>\r\n                            <p>可在您的淘宝京东订单内查询复制！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        {...getFieldProps('order_code', {\r\n                            initialValue: order_code,\r\n                            rules: [\r\n                                { required: true, message: '请输入订单编号' }\r\n                            ],\r\n                        })}\r\n                    ></InputItem>\r\n                </List>\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">手机号码：</p>\r\n                            <p className=\"danger\">必填项！请填写收卡人的手机号，此手机号即为对方查询留言的唯一密码，请核对无误！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        type=\"phone\"\r\n                        placeholder=\"对方手机号码\"\r\n                        {...getFieldProps('mobile', {\r\n                            initialValue: mobile,\r\n                            rules: [\r\n                                { required: true, message: '请输入对方手机号码' },\r\n                            ]\r\n                        })}\r\n                    ></InputItem>\r\n                </List>\r\n\r\n                <List className=\"no-bg\" renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">验证码：</p>\r\n                            <p>填入右边您看到的字母,区分大小写!</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <div className=\"code-wrap\">\r\n                        <InputItem\r\n                            placeholder=\"\"\r\n                            {...getFieldProps('captcha_val', {\r\n                                initialValue: captcha_val,\r\n                                rules: [\r\n                                    { required: true, message: '请输入验证码' },\r\n                                ],\r\n                            })}\r\n                        ></InputItem>\r\n                        <div className=\"\">\r\n                            <img className=\"codeImg\" onClick={this.props.getCodeUrl} src={captcha_url}></img>\r\n                        </div>\r\n                    </div>\r\n                </List>\r\n                <div className=\"fixed-bottom\">\r\n                    <Button onClick={this.previewResult}>预览</Button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default createForm()(WriteForm)","import React from 'react'\r\nimport { createForm } from 'rc-form';\r\nimport { List, InputItem, ImagePicker, TextareaItem } from 'antd-mobile';\r\nimport { file } from '@babel/types';\r\n\r\nclass PreviewForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            disabled: true,\r\n            files: [],\r\n            imgFileId: null,\r\n            recorder: null,\r\n            audioPlayStatus: 0,\r\n            previewFlag: false,\r\n            previewImgArr: [],\r\n            previewImgIndex: 0,\r\n            codeUrl: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addAudioListenner()\r\n    }\r\n\r\n    addAudioListenner() {\r\n        let audio = document.getElementById('my_audio')\r\n        if (audio) {\r\n            audio.addEventListener('ended', () => {\r\n                this.setState({\r\n                    audioPlayStatus: 3\r\n                })\r\n            }, false)\r\n        }\r\n    }\r\n\r\n    playAudio = () => {\r\n        let audio = document.getElementById('my_audio')\r\n        audio.volume = 1;\r\n        let { audioPlayStatus } = this.state\r\n        if (audioPlayStatus == 0) {\r\n            audio.play()\r\n            this.setState({\r\n                audioPlayStatus: 1\r\n            })\r\n        } else if (audioPlayStatus == 1) {\r\n            this.setState({\r\n                audioPlayStatus: 2\r\n            })\r\n            audio.pause()\r\n        } else if (audioPlayStatus == 2) {\r\n            audio.play()\r\n            this.setState({\r\n                audioPlayStatus: 1\r\n            })\r\n        } else if (audioPlayStatus == 3) {\r\n            audio.play()\r\n            this.setState({\r\n                audioPlayStatus: 1\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { getFieldProps } = this.props.form;\r\n        let {audioPlayStatus} = this.state;\r\n        let { say_to_you, files = [], username, created_at, audioUrl } = this.props.formData;\r\n        let imgUrl = files && files.length != 0 ? files[0].url : ''\r\n        return (\r\n            <form className=\"my-form preview-form\">\r\n                <List className=\"audio-list\" renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">我想对您说：</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <div>\r\n                        <p className=\"word-wrap\">{say_to_you}</p>\r\n                        {\r\n                            audioUrl ? <div className=\"audio-wrap\">\r\n                                <p onClick={this.playAudio} className={(audioPlayStatus == 1 ? 'btn end' : 'btn start')}></p>\r\n                                <audio id=\"my_audio\" src={audioUrl}></audio>\r\n                            </div> : null\r\n                        }\r\n                    </div>\r\n                </List>\r\n\r\n                {\r\n                    imgUrl ? <List className=\"no-bg bg-list\" renderHeader={() => {\r\n                        return (\r\n                            <div>\r\n                                <p className=\"label\">永恒一刻：</p>\r\n                            </div>\r\n                        )\r\n                    }}>\r\n                        <div className=\"preview-img\"><img onClick={() => this.props.previewImg(imgUrl)} src={imgUrl}></img></div>\r\n                    </List> : null\r\n                }\r\n\r\n                {\r\n                    username ? <List renderHeader={() => {\r\n                        return (\r\n                            <div>\r\n                                <p className=\"label\">送卡人姓名/昵称：</p>\r\n                            </div>\r\n                        )\r\n                    }}>\r\n                        <InputItem\r\n                            {...getFieldProps('username', {\r\n                                initialValue: username\r\n                            })}\r\n                        ></InputItem>\r\n\r\n                    </List> : null\r\n                }\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">发送时间：</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        {...getFieldProps('created_at', {\r\n                            initialValue: created_at\r\n                        })}\r\n                    ></InputItem>\r\n\r\n                </List>\r\n\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default createForm()(PreviewForm)","import React from 'react'\r\nimport { Toast, Button } from 'antd-mobile';\r\nimport { getLocal, removeLocal, parseTime,queryUrlParam } from '@/utils/util'\r\nimport { saveSecret, uploadAudio, getCodeUrl, getBgUrl } from '@/api'\r\nimport WxImageViewer from 'react-wx-images-viewer';\r\nimport { staticHost2ApiHost } from '@/utils/env'\r\nimport WriteForm from './components/writeForm'\r\nimport PreviewForm from './components/previewForm'\r\n\r\nclass WriteSecre extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      imgFileId: null,\r\n      previewFlag: false,\r\n      previewImgArr: [],\r\n      previewImgIndex: 0,\r\n      bgUrl: '',\r\n      formData: {},\r\n      audioBlod: null,\r\n      audioUrl: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    let bgUrl = queryUrlParam(this.props.history.location.search, 'bg');\r\n    if (bgUrl) {\r\n      this.setState({\r\n        bgUrl\r\n      })\r\n    }else{\r\n      this.getBgUrl()\r\n    }\r\n    \r\n    this.getCodeUrl()\r\n  }\r\n\r\n  getBgUrl = () => {\r\n    getBgUrl().then(res => {\r\n      let data = res.data;\r\n      if (data && data.length != 0) {\r\n        let bgUrl = staticHost2ApiHost() + data[0].rel_image.path;\r\n        this.setState({\r\n          bgUrl\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  previewImg = (url) => {\r\n    this.setState({\r\n      previewFlag: true,\r\n      previewImgArr: [url],\r\n      previewImgIndex: 0\r\n    })\r\n  }\r\n\r\n  previewClose = () => {\r\n    this.setState({\r\n      previewFlag: false\r\n    })\r\n  }\r\n\r\n  formSubmit = () => {\r\n    let values = Object.assign({}, this.state.formData);\r\n    let token = getLocal('_secret_wx_token');\r\n    if (token) {\r\n      values.wechat_token = token\r\n    }\r\n    if (this.state.imgFileId) {\r\n      values.thumb = this.state.imgFileId\r\n    } else {\r\n      values.thumb = 0\r\n    }\r\n    values.mobile = values.mobile.replace(/\\s*/g, '');\r\n    values.captcha_key = this.state.codeKey\r\n    delete values.files\r\n    delete values.created_at\r\n    delete values.audioUrl\r\n    delete values.captcha_url\r\n\r\n    let func = (values) => {\r\n      saveSecret(values).then(res => {\r\n        Toast.success('提交成功')\r\n      }).catch(e => {\r\n        removeLocal('_secret_wx_token')\r\n        setTimeout(() => {\r\n          this.props.history.replace(`/powerionics/write`)\r\n        }, 100)\r\n      })\r\n    }\r\n\r\n    if (this.state.audioBlod) {\r\n      let formData = new FormData();\r\n      formData.append('upfile', this.state.audioBlod, 'test.wav')\r\n      uploadAudio(formData).then(data => {\r\n        values.audio = data.id\r\n        func(values)\r\n      })\r\n    } else {\r\n      values.audio = 0\r\n      func(values)\r\n    }\r\n  }\r\n\r\n  previewResult = () => {\r\n    this.writeForm.props.form.validateFields({ force: true }, (errors, values) => {\r\n      if (!errors) {\r\n        this.setState({\r\n          resultPreviewFlag: true,\r\n          formData: Object.assign({}, this.state.formData, { ...this.writeForm.props.form.getFieldsValue(), created_at: parseTime(new Date()), audioUrl: this.state.audioUrl })\r\n        })\r\n      } else {\r\n        for (let x in errors) {\r\n          let error = errors[x];\r\n          Toast.info(error.errors[0].message)\r\n          return\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  returnEdit = () => {\r\n    this.setState({\r\n      resultPreviewFlag: false\r\n    })\r\n  }\r\n\r\n  getCodeUrl = () => {\r\n    if (!this.codeLock) {\r\n      this.codeLock = true;\r\n      getCodeUrl().then(res => {\r\n        this.codeLock = false\r\n        this.setState({\r\n          formData: Object.assign({}, this.state.formData, { captcha_url: res.img }),\r\n          codeKey: res.key\r\n        })\r\n      }).catch(e => {\r\n        this.codeLock = false\r\n      })\r\n    }\r\n  }\r\n\r\n  setImageFile = (files, data) => {\r\n    let imgFileId = null\r\n    if (data) {\r\n      imgFileId = data.id\r\n    }\r\n    this.setState({\r\n      formData: Object.assign({}, this.state.formData, { files }),\r\n      imgFileId\r\n    })\r\n  }\r\n\r\n  setAudioUrl = (blob) => {\r\n    this.setState({\r\n      audioBlod: blob,\r\n      audioUrl: URL.createObjectURL(blob)\r\n    },() => {\r\n      this.previewResult()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { previewFlag, previewImgArr, previewImgIndex, bgUrl, resultPreviewFlag, formData } = this.state\r\n\r\n    return (\r\n      <div className=\"write-wrap\">\r\n        {\r\n          previewFlag ? <WxImageViewer onClose={this.previewClose} urls={previewImgArr} index={previewImgIndex} /> : null\r\n        }\r\n        <div><img className=\"top-bg\" src={bgUrl}></img></div>\r\n        <div className=\"main\">\r\n          {\r\n            resultPreviewFlag ? <PreviewForm previewImg={this.previewImg} formData={formData}></PreviewForm> : <WriteForm formData={formData} previewImg={this.previewImg} setImageFile={this.setImageFile} getCodeUrl={this.getCodeUrl} setAudioUrl={this.setAudioUrl} wrappedComponentRef={(form) => this.writeForm = form}></WriteForm>\r\n          }\r\n        </div>\r\n        <div className=\"fixed-bottom\">\r\n          {\r\n            resultPreviewFlag ? <div className=\"wrap\">\r\n              <Button onClick={this.returnEdit}>返回修改</Button>\r\n              <Button onClick={this.formSubmit}>确认提交</Button>\r\n            </div>:null\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default WriteSecre","import React from 'react'\r\nimport { InputItem, Toast, Button } from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport { queryUrlParam } from '@/utils/util'\r\nimport { getSecret, getBgUrl } from '@/api'\r\nimport WxImageViewer from 'react-wx-images-viewer';\r\nimport { staticHost2ApiHost } from '@/utils/env'\r\nimport PreviewForm from './components/previewForm'\r\n\r\nclass CheckSecre extends React.Component {\r\n  state = {\r\n    check_status: 'off',\r\n    audioUrl: '',\r\n    audioStatus: 0,\r\n    secretInfo: {},\r\n    previewFlag: false,\r\n    previewImgArr: [],\r\n    previewImgIndex: 0,\r\n    bgUrl: ''\r\n  }\r\n\r\n  componentWillMount() {\r\n    let phone = queryUrlParam(this.props.history.location.search, 'phone')\r\n    if (phone) {\r\n      this.getInfo(phone)\r\n    }\r\n    this.getBgUrl()\r\n  }\r\n\r\n  getBgUrl = () => {\r\n    getBgUrl().then(res => {\r\n      let data = res.data;\r\n      if (data && data.length != 0) {\r\n        let bgUrl = staticHost2ApiHost() + data[0].rel_image.path;\r\n        this.setState({\r\n          bgUrl\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getInfo(phone) {\r\n    getSecret(phone).then(res => {\r\n      let data = res.data;\r\n      if(data.rel_audio){\r\n        data.audioUrl = staticHost2ApiHost() + data.rel_audio.path\r\n      }\r\n      if(data.rel_thumb){\r\n        data.files = [{url:staticHost2ApiHost() + data.rel_thumb.path}]\r\n      }\r\n      this.setState({\r\n        check_status: 'on',\r\n        secretInfo: data\r\n      })\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.props.form.validateFields({ force: true }, (errors, values) => {\r\n      if (!errors) {\r\n        // this.setState({\r\n        //   check_status: 'on'\r\n        // })\r\n        values.phone = values.phone.toString().replace(/\\s*/g, '')\r\n        this.getInfo(values.phone)\r\n      } else {\r\n        for (let x in errors) {\r\n          let error = errors[x];\r\n          Toast.info(error.errors[0].message)\r\n          return\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  previewImg = (url) => {\r\n    this.setState({\r\n      previewFlag: true,\r\n      previewImgArr: [url],\r\n      previewImgIndex: 0\r\n    })\r\n  }\r\n\r\n  previewClose = () => {\r\n    this.setState({\r\n      previewFlag: false\r\n    })\r\n  }\r\n\r\n  gotoHelpCenter = () => {\r\n    this.props.history.push('/helpCenter')\r\n  }\r\n\r\n  render() {\r\n    let { check_status, secretInfo, previewFlag, previewImgArr, previewImgIndex, bgUrl } = this.state;\r\n    const { getFieldProps } = this.props.form;\r\n    return (\r\n      <div className=\"secret-check-wrap\">\r\n        {\r\n          previewFlag ? <WxImageViewer onClose={this.previewClose} urls={previewImgArr} index={previewImgIndex} /> : null\r\n        }\r\n        {\r\n          check_status === 'off' ? <div className=\"secret-check-form-wrap\">\r\n            <div className=\"top\"></div>\r\n            <div className=\"main\">\r\n              <div className=\"tip\">\r\n                <p>您的朋友随礼物还给您留了一段私言密语，您的手机号是查询留言的密码！</p>\r\n                <p>请输入您的手机号码查看TA为您留下的私言密语......</p>\r\n              </div>\r\n              <form className=\"secret-check-form\">\r\n                <div className=\"label\">输入你的手机号码</div>\r\n                <InputItem\r\n                  type=\"phone\"\r\n                  {...getFieldProps('phone', {\r\n                    initialValue: this.state.phone,\r\n                    rules: [\r\n                      { required: true, message: '请输入手机号码' },\r\n                    ],\r\n                  })}\r\n                ></InputItem>\r\n                <Button className=\"search-btn\" size=\"small\" onClick={this.onSubmit}>查看</Button>\r\n              </form>\r\n            </div>\r\n          </div> : <div className=\"result\">\r\n              <div className=\"top\"><img src={bgUrl}></img></div>\r\n              <PreviewForm previewImg={this.previewImg} formData={secretInfo}></PreviewForm>\r\n              <div className=\"fixed-bottom\">\r\n                <a className=\"url-btn\" href=\"//powerionics.jd.com\" target=\"_blank\">我也要挑选礼物送TA</a>\r\n                <span onClick={this.gotoHelpCenter} className=\"help-center\">帮助中心</span>\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default createForm()(CheckSecre)","import layout from '../view/secret/components/layout'\r\nimport powerionicsLayout from '../view/secret/components/powerionicsLayout'\r\nimport writeSecret from '../view/secret/write'\r\nimport checkSecret from '../view/secret/check'\r\nimport helpCenter from '../view/secret/helpCenter'\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: layout,\r\n        exact:true\r\n    },\r\n    {\r\n        path: '/helpCenter',\r\n        component: helpCenter,\r\n    },\r\n    {\r\n        path: '/powerionics',\r\n        component: powerionicsLayout,\r\n        routes: [\r\n            {\r\n                path: '/powerionics/write',\r\n                component: writeSecret\r\n            },\r\n            {\r\n                path: '/powerionics/check',\r\n                component: checkSecret\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default routes\r\n","import React from 'react'\r\nimport helpImage from '../../assets/images/help_center.jpg'\r\n\r\nclass HelpCenter extends React.Component {\r\n\r\n  render() {\r\n      return <div>\r\n          <img src={helpImage}></img>\r\n      </div>\r\n  }\r\n}\r\nexport default HelpCenter","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport routes from './routes/index'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@/utils';\r\nimport '@/assets/styles/index.scss'\r\nimport 'lib-flexible/flexible'\r\n\r\nReactDom.render((\r\n    <Router>\r\n            {\r\n                routes.map((route, index) => {\r\n                    return <Route key={index} exact={route.exact} path={route.path} render={props => (\r\n                        <route.component {...props} routes={route.routes} />\r\n                    )}></Route>\r\n                })\r\n            }\r\n    </Router>\r\n), document.querySelector('#root'))\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}