{"version":3,"sources":["assets/images/help_center.jpg","utils/util.js","utils/env.js","utils/request.js","api/index.js","view/secret/components/layout.js","utils/recorder.js","view/secret/components/writeForm.js","view/secret/components/previewForm.js","view/secret/write.js","view/secret/check.js","routes/index.js","view/secret/helpCenter.js","serviceWorker.js","utils/wx.js","index.js"],"names":["module","exports","__webpack_require__","p","parseTime","time","cFormat","date","format","replace","length","parseInt","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","result","key","value","queryUrlParam","str","name","reg","RegExp","indexOf","r","split","match","setLocal","window","localStorage","setItem","getLocal","getItem","removeLocal","removeItem","isWeiXin","staticHost2ApiHost","localhost","location","hostname","pending","cancelToken","axios","CancelToken","removePending","config","u","url","method","f","splice","service","create","baseURL","params","interceptors","request","use","toast_default","loading","c","push","error","Promise","reject","response","res","data","hide","code","info","JSON","stringify","message","saveSecret","uploadAudio","file","headers","Content-Type","uploadImage","getCodeUrl","getBgUrl","getWxConfig","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","search","returnPath","props","history","token","getAuth","getToken","then","setTimeout","pathname","redirectUri","encodeURIComponent","concat","href","react_default","createElement","id","routes","map","route","index","react_router","exact","path","render","component","assign","icon_default","type","React","Component","Recorder","source","cfg","bufferLen","numChannels","mimeType","recording","callbacks","getBuffer","exportWAV","context","node","createScriptProcessor","createJavaScriptNode","onaudioprocess","e","buffer","channel","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","InlineWorker","sampleRate","recLength","recBuffers","initBuffers","mergeBuffers","Float32Array","offset","set","writeString","view","string","setUint8","charCodeAt","onmessage","record","interleaved","buffers","inputL","inputR","inputIndex","interleave","dataview","samples","ArrayBuffer","DataView","setUint32","setUint16","output","input","Math","max","min","setInt16","floatTo16BitPCM","encodeWAV","audioBlob","Blob","cb","pop","createClass","callback","Error","blob","filename","URL","webkitURL","createObjectURL","link","document","download","click","createEvent","initEvent","dispatchEvent","alert","modal_default","wx","WriteForm","comonRecord","_this$state","audioStatus","recorder","clearTimeout","timer","func","_this$state2","setState","startAudio","setInterval","limitTime","clearInterval","stopRecording","text","onPress","clear","audio_context","AudioContext","webkitAudioContext","navigator","getUserMedia","webkitGetUserMedia","mediaDevices","audio","stream","startUserMedia","catch","form","getFieldsValue","reload","wxRecord","onChange","files","formData","FormData","append","setImageFile","createMediaStreamSource","stop","setAudioUrl","_this3","_this$state3","startRecord","success","stopRecord","localId","fail","_this4","_this$state4","getFieldProps","_this$props$formData","say_to_you","_this$props$formData$","username","order_code","mobile","captcha_val","captcha_url","filterTime","className","list_default","renderHeader","onClick","textarea_item_default","rows","initialValue","rules","required","image_picker_default","onImageClick","fs","previewImg","selectable","multiple","input_item_default","placeholder","src","createForm","PreviewForm","playCommonAudio","getElementById","volume","audioPlayStatus","play","pause","playWxAudio","wxAudioLocalId","playVoice","pauseVoice","playAudio","disabled","imgFileId","previewFlag","previewImgArr","previewImgIndex","codeUrl","addAudioListenner","onVoicePlayEnd","addEventListener","created_at","audioUrl","imgUrl","havaAudio","WriteSecre","bgUrl","rel_image","previewClose","formSubmit","values","wechat_token","thumb","captcha_key","codeKey","uploadVoice","isShowProgressTips","wx_audio","serverId","audioBlod","previewResult","writeForm","validateFields","force","errors","x","resultPreviewFlag","objectSpread","returnEdit","codeLock","img","dist_default","onClose","urls","previewForm","previwe","wrappedComponentRef","button_default","CheckSecre","check_status","secretInfo","onSubmit","phone","toString","getInfo","gotoHelpCenter","rel_audio","rel_thumb","downloadVoice","size","target","redirect","helpImage","layout","writeSecret","checkSecret","isLocalhost","Boolean","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","_res$data","appId","timestamp","nonceStr","signature","debug","jsApiList","initWxConfig","ReactDom","react_router_dom","to","querySelector","process","origin","fetch","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8SCClCC,EAAY,SAACC,EAAMC,GACvB,IACIC,EADEC,EAASF,GAAW,0BAEN,kBAATD,EACTE,EAAOF,GAGoB,MAAtB,IADLA,EAAOA,EAAKI,QAAQ,KAAM,OACVC,SAAeL,EAAwB,IAAjBM,SAASN,IAC/CE,EAAO,IAAIK,KAAKP,IAElB,IAAMQ,EAAY,CAChBC,EAAGP,EAAKQ,cACRC,EAAGT,EAAKU,WAAa,EACrBC,EAAGX,EAAKY,UACRC,EAAGb,EAAKc,WACRC,EAAGf,EAAKgB,aACRC,EAAGjB,EAAKkB,aACRC,EAAGnB,EAAKoB,UAWV,OATiBnB,EAAOC,QAAQ,sBAAuB,SAACmB,EAAQC,GAC9D,IAAIC,EAAQjB,EAAUgB,GAEtB,MAAY,MAARA,EAAsB,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAKC,IAC1DF,EAAOlB,OAAS,GAAKoB,EAAQ,KAC/BA,EAAQ,IAAMA,GAETA,GAAS,MAOdC,EAAgB,SAACC,EAAKC,GAC1B,IAAIC,EAAM,IAAIC,OAAO,QAAUF,EAAO,gBAAiB,KACvD,GAAID,EAAII,QAAQ,MAAQ,EAAG,CACzB,IAAIC,EAAIL,EAAIM,MAAM,KAAK,GAAGC,MAAML,GAChC,OAAS,MAALG,EAAmBA,EAAE,GAClB,KAET,OAAO,MASHG,EAAW,SAACX,EAAKC,GACrB,OAAOW,OAAOC,aAAaC,QAAQd,EAAKC,IAOpCc,EAAW,SAACf,GAChB,OAAOY,OAAOC,aAAaG,QAAQhB,IAO/BiB,EAAc,SAACjB,GACnB,OAAOY,OAAOC,aAAaK,WAAWlB,IAMlCmB,EAAW,WASf,OAAO,6CClFF,SAASC,IAEZ,MAAO,CACHC,UAAa,+BAFLT,OAAOU,SAASC,WAGhB,8BCChB,IAAIC,EAAU,GACVC,EAAcC,IAAMC,YACpBC,EAAgB,SAACC,GACjB,IAAI,IAAIvD,KAAKkD,EACNA,EAAQlD,GAAGwD,GAAKD,EAAOE,IAAM,IAAMF,EAAOG,SACzCR,EAAQlD,GAAG2D,IACXT,EAAQU,OAAO5D,EAAG,KAKxB6D,EAAUT,IAAMU,OAAO,CAC3BC,QAASjB,IAMTkB,OAAQ,KAGVH,EAAQI,aAAaC,QAAQC,IAC3B,SAAAZ,GAQE,OAPAa,EAAA7C,EAAM8C,QAAQ,GAAI,GAClBf,EAAcC,GACdA,EAAOJ,YAAc,IAAIA,EAAY,SAACmB,GAElCpB,EAAQqB,KAAK,CAAEf,EAAGD,EAAOE,IAAM,IAAMF,EAAOG,OAAQC,EAAGW,MAGpDf,GAET,SAAAiB,GACEC,QAAQC,OAAOF,KAKnBX,EAAQI,aAAaU,SAASR,IAC5B,SAAAQ,GACE,IAAIC,EAAMD,EAASE,KAGnB,OAFAT,EAAA7C,EAAMuD,OACNxB,EAAcqB,EAASpB,QACP,GAAZqB,EAAIG,MACNX,EAAA7C,EAAMyD,KAAKC,KAAKC,UAAUN,GAAK,GACxBH,QAAQC,OAAOE,IAEfD,EAASE,MAGpB,SAAAL,GAGE,OAFAJ,EAAA7C,EAAMuD,OACNV,EAAA7C,EAAMyD,KAAKR,EAAMW,QAAQ,GAClBV,QAAQC,OAAOF,KAIXX,QCjDTuB,EAAa,SAACP,GAClB,OAAOX,EAAQ,CACbT,IAAK,cACLC,OAAQ,OACRmB,UASEQ,EAAc,SAACC,GACnB,OAAOpB,EAAQ,CACbT,IAAK,gEACLC,OAAQ,OACR6B,QAAS,CAAEC,eAAgB,uBAC3BX,KAAMS,KAQJG,EAAc,SAACH,GACnB,OAAOpB,EAAQ,CACbT,IAAK,gEACLC,OAAQ,OACR6B,QAAS,CAAEC,eAAgB,uBAC3BX,KAAMS,KASJI,EAAa,WACjB,OAAOxB,EAAQ,CACbT,IAAK,eACLC,OAAQ,SASNiC,EAAW,WACf,OAAOzB,EAAQ,CACbT,IAAK,kBACLC,OAAQ,SAkBNkC,EAAc,SAACnC,GACnB,OAAOS,EAAQ,CACbT,IAAK,2BACLC,OAAQ,MACRM,OAAO,CACLP,uCClFF,SAAAoC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,GAFHP,oFAKO,IAAAQ,EAAAL,KACblB,EAAOnD,EAAcU,OAAOU,SAASuD,OAAQ,QAC7CC,EAAa5E,EAAcU,OAAOU,SAASuD,OAAQ,cAGvD,IAFY3E,EAAcqE,KAAKQ,MAAMC,QAAQ1D,SAASuD,OAAQ,MAG1D,GAAI1D,IAAY,CAEZ,IAAI8D,EAAQlE,EAAS,oBACrB,GAAKkE,EAcDV,KAAKQ,MAAMC,QAAQnC,KAAKiC,OAdhB,CACR,IAAKzB,EAED,YADAkB,KAAKW,WDmDZ,SAAC7B,GAChB,OAAOb,EAAQ,CACbT,IAAK,oBACLC,OAAQ,MACRM,OAAO,CACLe,WCrDkB8B,CAAS9B,GAAM+B,KAAK,SAAAlC,GAChB+B,EAAQ/B,EAAIC,KACZxC,EAAS,mBAAoBsE,GAC7BI,WAAW,WACPT,EAAKG,MAAMC,QAAQnC,KAAKiC,IACzB,aAOfP,KAAKQ,MAAMC,QAAQnC,KAAK,wDAMhC,IAEIiC,EAAaP,KAAKQ,MAAMzD,SAASgE,SACjCC,EAAcC,mBAAmB,kDAAkDV,GAKnF/C,EAAG,6DAAA0D,OARK,qBAQL,kBAAAA,OAAsFF,EAAtF,yEACP3E,OAAOU,SAASoE,KAAO3D,mCAOvB,IAAIkD,EAAQlE,EAAS,oBACrB,OAAO4E,EAAA9F,EAAA+F,cAAA,OAAKC,GAAG,eAEPZ,EAAMV,KAAKQ,MAAMe,OAAOC,IAAI,SAACC,EAAOC,GAChC,OAAON,EAAA9F,EAAA+F,cAACM,EAAA,EAAD,CAAOlG,IAAKiG,EAAOE,MAAOH,EAAMG,MAAOC,KAAMJ,EAAMI,KAAMC,OAAQ,SAAAtB,GAAK,OACzEY,EAAA9F,EAAA+F,cAACI,EAAMM,UAAPjC,OAAAkC,OAAA,GAAqBxB,EAArB,CAA4Be,OAAQE,EAAMF,eAE/CH,EAAA9F,EAAA+F,cAAAY,EAAA3G,EAAA,CAAM4G,KAAK,oBA7DDC,IAAMC,iOCsPpBC,GA5Pf,WAcI,SAAAA,EAAYC,EAAQC,GAAK,IAAA1C,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,GAAArC,KAbzB1C,OAAS,CACLkF,UAAW,KACXC,YAAa,EACbC,SAAU,aAUW1C,KAPzB2C,WAAY,EAOa3C,KALzB4C,UAAY,CACRC,UAAW,GACXC,UAAW,IAIXhD,OAAOkC,OAAOhC,KAAK1C,OAAQiF,GAC3BvC,KAAK+C,QAAUT,EAAOS,QACtB/C,KAAKgD,MAAQhD,KAAK+C,QAAQE,uBAC1BjD,KAAK+C,QAAQG,sBAAsB/C,KAAKH,KAAK+C,QACzC/C,KAAK1C,OAAOkF,UAAWxC,KAAK1C,OAAOmF,YAAazC,KAAK1C,OAAOmF,aAEhEzC,KAAKgD,KAAKG,eAAiB,SAACC,GACxB,GAAKvD,EAAK8C,UAAV,CAGA,IADA,IAAIU,EAAS,GACJC,EAAU,EAAGA,EAAUzD,EAAKvC,OAAOmF,YAAaa,IACrDD,EAAO/E,KAAK8E,EAAEG,YAAYC,eAAeF,IAE7CzD,EAAK4D,OAAOC,YAAY,CACpBC,QAAS,SACTN,OAAQA,MAIhBf,EAAOsB,QAAQ5D,KAAKgD,MACpBhD,KAAKgD,KAAKY,QAAQ5D,KAAK+C,QAAQc,aAG/B7D,KAAKyD,OAAS,IAAIK,KAAa,WAC3B,IAEIC,EACAtB,EAHAuB,EAAY,EACZC,EAAa,GAoEjB,SAASC,IACL,IAAK,IAAIZ,EAAU,EAAGA,EAAUb,EAAaa,IACzCW,EAAWX,GAAW,GAI9B,SAASa,EAAaF,EAAYD,GAG9B,IAFA,IAAIxI,EAAS,IAAI4I,aAAaJ,GAC1BK,EAAS,EACJnJ,EAAI,EAAGA,EAAI+I,EAAW3J,OAAQY,IACnCM,EAAO8I,IAAIL,EAAW/I,GAAImJ,GAC1BA,GAAUJ,EAAW/I,GAAGZ,OAE5B,OAAOkB,EAyBX,SAAS+I,EAAYC,EAAMH,EAAQI,GAC/B,IAAK,IAAIvJ,EAAI,EAAGA,EAAIuJ,EAAOnK,OAAQY,IAC/BsJ,EAAKE,SAASL,EAASnJ,EAAGuJ,EAAOE,WAAWzJ,IAxGpD8E,KAAK4E,UAAY,SAAUxB,GACvB,OAAQA,EAAExE,KAAK+E,SACX,IAAK,OAkBCrG,EAjBG8F,EAAExE,KAAKtB,OAkBpByG,EAAazG,EAAOyG,WACpBtB,EAAcnF,EAAOmF,YACrByB,IAnBQ,MACJ,IAAK,UAqBb,SAAgBX,GACZ,IAAK,IAAID,EAAU,EAAGA,EAAUb,EAAaa,IACzCW,EAAWX,GAAShF,KAAKiF,EAAYD,IAEzCU,GAAaT,EAAY,GAAGjJ,OAxBpBuK,CAAOzB,EAAExE,KAAKyE,QACd,MACJ,IAAK,aAyBb,SAAmBnB,GAEf,IADA,IAII4C,EAJAC,EAAU,GACLzB,EAAU,EAAGA,EAAUb,EAAaa,IACzCyB,EAAQzG,KAAK6F,EAAaF,EAAWX,GAAUU,IAI/Cc,EADgB,IAAhBrC,EAyCR,SAAoBuC,EAAQC,GACxB,IAAI3K,EAAS0K,EAAO1K,OAAS2K,EAAO3K,OAChCkB,EAAS,IAAI4I,aAAa9J,GAE1BoH,EAAQ,EACRwD,EAAa,EAEjB,KAAOxD,EAAQpH,GACXkB,EAAOkG,KAAWsD,EAAOE,GACzB1J,EAAOkG,KAAWuD,EAAOC,GACzBA,IAEJ,OAAO1J,EApDW2J,CAAWJ,EAAQ,GAAIA,EAAQ,IAE/BA,EAAQ,GAE1B,IAAIK,EAgER,SAAmBC,GACf,IAAIhC,EAAS,IAAIiC,YAAY,GAAsB,EAAjBD,EAAQ/K,QACtCkK,EAAO,IAAIe,SAASlC,GA+BxB,OA5BAkB,EAAYC,EAAM,EAAG,QAErBA,EAAKgB,UAAU,EAAG,GAAsB,EAAjBH,EAAQ/K,QAAY,GAE3CiK,EAAYC,EAAM,EAAG,QAErBD,EAAYC,EAAM,GAAI,QAEtBA,EAAKgB,UAAU,GAAI,IAAI,GAEvBhB,EAAKiB,UAAU,GAAI,GAAG,GAEtBjB,EAAKiB,UAAU,GAAIhD,GAAa,GAEhC+B,EAAKgB,UAAU,GAAIzB,GAAY,GAE/BS,EAAKgB,UAAU,GAAiB,EAAbzB,GAAgB,GAEnCS,EAAKiB,UAAU,GAAkB,EAAdhD,GAAiB,GAEpC+B,EAAKiB,UAAU,GAAI,IAAI,GAEvBlB,EAAYC,EAAM,GAAI,QAEtBA,EAAKgB,UAAU,GAAqB,EAAjBH,EAAQ/K,QAAY,GA1C3C,SAAyBoL,EAAQrB,EAAQsB,GACrC,IAAK,IAAIzK,EAAI,EAAGA,EAAIyK,EAAMrL,OAAQY,IAAKmJ,GAAU,EAAG,CAChD,IAAIjJ,EAAIwK,KAAKC,KAAK,EAAGD,KAAKE,IAAI,EAAGH,EAAMzK,KACvCwK,EAAOK,SAAS1B,EAAQjJ,EAAI,EAAQ,MAAJA,EAAiB,MAAJA,GAAY,IAyC7D4K,CAAgBxB,EAAM,GAAIa,GAEnBb,EAjGQyB,CAAUnB,GACrBoB,EAAY,IAAIC,KAAK,CAACf,GAAW,CAAClD,KAAMA,IAE5ClC,KAAK0D,YAAY,CAACC,QAAS,YAAa/E,KAAMsH,IAtCtCpD,CAAUM,EAAExE,KAAKsD,MACjB,MACJ,IAAK,aAuCb,WAEI,IADA,IAAI6C,EAAU,GACLzB,EAAU,EAAGA,EAAUb,EAAaa,IACzCyB,EAAQzG,KAAK6F,EAAaF,EAAWX,GAAUU,IAEnDhE,KAAK0D,YAAY,CAACC,QAAS,YAAa/E,KAAMmG,IA3CtClC,GACA,MACJ,IAAK,QA6CTmB,EAAY,EACZC,EAAa,GACbC,IAzCJ,IAAc5G,IA3BP,IAwJX0C,KAAKyD,OAAOC,YAAY,CACpBC,QAAS,OACTrG,OAAQ,CACJyG,WAAY/D,KAAK+C,QAAQgB,WACzBtB,YAAazC,KAAK1C,OAAOmF,eAIjCzC,KAAKyD,OAAOmB,UAAY,SAACxB,GACrB,IAAIgD,EAAKvG,EAAK+C,UAAUQ,EAAExE,KAAK+E,SAAS0C,MACvB,mBAAND,GACPA,EAAGhD,EAAExE,KAAKA,OAxM1B,OAAAkB,OAAAwG,EAAA,EAAAxG,CAAAuC,EAAA,EAAA5G,IAAA,SAAAC,MAAA,WA+MQsE,KAAK2C,WAAY,IA/MzB,CAAAlH,IAAA,OAAAC,MAAA,WAmNQsE,KAAK2C,WAAY,IAnNzB,CAAAlH,IAAA,QAAAC,MAAA,WAuNQsE,KAAKyD,OAAOC,YAAY,CAACC,QAAS,YAvN1C,CAAAlI,IAAA,YAAAC,MAAA,SA0Nc0K,GAEN,KADAA,EAAKA,GAAMpG,KAAK1C,OAAOiJ,UACd,MAAM,IAAIC,MAAM,oBAEzBxG,KAAK4C,UAAUC,UAAUvE,KAAK8H,GAE9BpG,KAAKyD,OAAOC,YAAY,CAACC,QAAS,gBAhO1C,CAAAlI,IAAA,YAAAC,MAAA,SAmOc0K,EAAI1D,GAGV,GAFAA,EAAWA,GAAY1C,KAAK1C,OAAOoF,WACnC0D,EAAKA,GAAMpG,KAAK1C,OAAOiJ,UACd,MAAM,IAAIC,MAAM,oBAEzBxG,KAAK4C,UAAUE,UAAUxE,KAAK8H,GAE9BpG,KAAKyD,OAAOC,YAAY,CACpBC,QAAS,YACTzB,KAAMQ,OA5OlB,EAAAjH,IAAA,gBAAAC,MAAA,SAiPkB+K,EAAMC,GAChB,IAAIlJ,GAAOnB,OAAOsK,KAAOtK,OAAOuK,WAAWC,gBAAgBJ,GACvDK,EAAOzK,OAAO0K,SAAS1F,cAAc,KACzCyF,EAAK3F,KAAO3D,EACZsJ,EAAKE,SAAWN,GAAY,aAC5B,IAAIO,EAAQF,SAASG,YAAY,SACjCD,EAAME,UAAU,SAAS,GAAM,GAC/BL,EAAKM,cAAcH,OAxP3B5E,EAAA,GCIMgF,GAAQC,EAAAhM,EAAM+L,MACdE,GAAKlL,OAAOkL,GACZC,eACF,SAAAA,IAAc,IAAA3H,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,IACV3H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0H,GAAArH,KAAAH,QAoGJyH,YAAc,WAAM,IAAAC,EACgB7H,EAAKO,MAA/BuH,EADUD,EACVC,YAAaC,EADHF,EACGE,SACnBC,aAAahI,EAAKiI,OAElB,IAAMC,EAAO,WAAM,IAAAC,EACiBnI,EAAKO,MAA/BuH,EADSK,EACTL,YAAaC,EADJI,EACIJ,SACA,GAAfD,GAAmC,GAAfA,GACpB9H,EAAKoI,SAAS,CACVN,YAAa,EACb1N,KAAM,EACNiO,YAAW,IAEfN,EAAS/C,SACTgD,aAAahI,EAAKiI,OAClBjI,EAAKiI,MAAQK,YAAY,WACrBtI,EAAKoI,SAAS,CACVhO,KAAM4F,EAAKO,MAAMnG,KAAO,GACzB,WACK4F,EAAKO,MAAMnG,MAAQ4F,EAAKO,MAAMgI,YAC9BC,cAAcxI,EAAKiI,OACnBjI,EAAKyI,oBAGd,MACmB,GAAfX,GACP9H,EAAKyI,iBAGb,GAAIzI,EAAKO,MAAMnG,MAAQ4F,EAAKO,MAAMgI,UAE9Bf,GAAM,GAAD,mDAAAnG,OAAgBrB,EAAKO,MAAMgI,UAA3B,0DAAiD,CAClD,CAAEG,KAAM,SAAKC,QAAS,cACtB,CACID,KAAM,SAAKC,QAAS,WAChB3I,EAAKoI,SAAS,CACVhO,KAAM,GACP,WACC2N,EAASa,QACT5I,EAAKgF,oBAOrB,GAAmB,GAAf8C,GAAqBC,EAqBrBG,QArB+B,CAC/B,IAAIW,EAAgB,KACpB,IAEIrM,OAAOsM,aAAetM,OAAOsM,cAAgBtM,OAAOuM,mBACpDC,UAAUC,aAAeD,UAAUC,cAAgBD,UAAUE,mBAC7D1M,OAAOsK,IAAMtK,OAAOsK,KAAOtK,OAAOuK,UAElC8B,EAAgB,IAAIC,aACpBE,UAAUG,aAAaF,aAAa,CAAEG,OAAO,IAAQpI,KAAK,SAACqI,GACvDxM,EAAY,YACZmD,EAAKsJ,eAAeT,EAAeQ,EAAQnB,KAC5CqB,MAAM,SAAAhG,GACLhH,EAAS,WAAY4C,KAAKC,UAAUY,EAAKW,MAAM6I,KAAKC,mBACpDjN,OAAOU,SAASwM,WAEtB,MAAOnG,GACLjF,EAAA7C,EAAMyD,KAAK,4IAnKbc,EA4KdgF,OAAS,WACDjI,IACAiD,EAAK2J,WAEL3J,EAAK4H,eAhLC5H,EAoLd4J,SAAW,SAACC,EAAOxH,EAAMR,GACrB,GAAoB,GAAhBgI,EAAMpP,OAAa,CACnB,IAAI+E,EAAOqK,EAAM,GAAGrK,KAChBsK,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAUxK,GAC1BG,EAAYmK,GAAU9I,KAAK,SAAAjC,GACvBiB,EAAKW,MAAMsJ,aAAaJ,EAAO9K,UAGnCiB,EAAKW,MAAMsJ,aAAaJ,IA3L5B7J,EAAKO,MAAQ,CACTwH,SAAU,KACVD,YAAa,EACb1N,KAAM,EACNmO,UAAW,IANLvI,oFAWVgI,aAAa7H,KAAK8H,sDAIlBD,aAAa7H,KAAK8H,8CAGPY,EAAeQ,EAAQ3C,GAClC,IAAIZ,EAAQ+C,EAAcqB,wBAAwBb,GAClDlJ,KAAKiI,SAAS,CACVL,SAAU,IAAIvF,GAASsD,IACxB,WACCY,GAAYA,8CAIJ,IAAAlG,EAAAL,KACN4H,EAAa5H,KAAKI,MAAlBwH,SACNA,EAASoC,OACTpC,EAAS9E,UAAU,SAAC2D,GAChBpG,EAAKG,MAAMyJ,YAAYxD,GACvBpG,EAAK4H,SAAS,CACVN,YAAa,MAGrBC,EAASa,2CAGF,IAAAyB,EAAAlK,KAAAmK,EACgCnK,KAAKI,MAAtCuH,EADCwC,EACDxC,YADCwC,EACYlQ,KADZkQ,EACkB/B,UACzBP,aAAa7H,KAAK8H,OAeK,GAAfH,GAAmC,GAAfA,EACpBJ,GAAG6C,YAAY,CACXC,QAAS,WACLH,EAAKjC,SAAS,CACVN,YAAa,EACbO,YAAY,EACZjO,KAAK,IAET4N,aAAaqC,EAAKpC,OAClBoC,EAAKpC,MAAQK,YAAY,WACrB+B,EAAKjC,SAAS,CACVhO,KAAMiQ,EAAK9J,MAAMnG,KAAO,GACzB,WACKiQ,EAAK9J,MAAMnG,MAAQiQ,EAAK9J,MAAMgI,YAC9BC,cAAc6B,EAAKpC,OACnBP,GAAG+C,WAAW,CACVD,QAAS,SAAC1L,GACNuL,EAAKjC,SAAS,CACVN,YAAa,IAEjBuC,EAAK1J,MAAMyJ,YAAYtL,EAAI4L,QAAS,aAKrD,SAKX1C,aAAa7H,KAAK8H,OAClBP,GAAG+C,WAAW,CACVD,QAAS,SAAC1L,GACNuL,EAAKjC,SAAS,CACVN,YAAa,IAEjBuC,EAAK1J,MAAMyJ,YAAYtL,EAAI4L,QAAS,OAExCC,KAAM,SAACpH,yCAoGd,IAAAqH,EAAAzK,KAAA0K,EAC4C1K,KAAKI,MAAhDuH,EADD+C,EACC/C,YAAuB1N,GADxByQ,EACc9C,SADd8C,EACwBzQ,MAAMmO,EAD9BsC,EAC8BtC,UAC3BuC,EAAkB3K,KAAKQ,MAAM6I,KAA7BsB,cAFHC,EAGoF5K,KAAKQ,MAAMmJ,SAA9FkB,EAHDD,EAGCC,WAHDC,EAAAF,EAGalB,aAHb,IAAAoB,EAGqB,GAHrBA,EAGyBC,EAHzBH,EAGyBG,SAAUC,EAHnCJ,EAGmCI,WAAYC,EAH/CL,EAG+CK,OAAQC,EAHvDN,EAGuDM,YAAaC,EAHpEP,EAGoEO,YAEnEC,EAAa,SAACnR,GAIhB,OAHIA,EAAO,KACPA,EAAO,IAAMA,GAEVA,GAGX,OACImH,EAAA9F,EAAA+F,cAAA,QAAMgK,UAAU,sBACZjK,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAM+P,UAAU,aAAaE,aAAc,WACvC,OACInK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,oBACXjK,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,SAAb,wCACAjK,EAAA9F,EAAA+F,cAAA,wFAAoB+G,EAApB,iBAEmB,GAAfT,EAAmBvG,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,OAAb,yBAA2BD,EAAWnR,IAAcwQ,EAAKrK,MAAM8H,WAAa9G,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,OAAb,yBAA2BD,EAAWnR,IAAa,QAK9JmH,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,cACXjK,EAAA9F,EAAA+F,cAAA,KAAGmK,QAASxL,KAAK6E,OAAQwG,UAA0B,GAAf1D,EAAmB,YAAc,gBAG7EvG,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAMiQ,aAAc,WAChB,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,iBAAb,wBACAjK,EAAA9F,EAAA+F,cAAA,4FAIRD,EAAA9F,EAAA+F,cAAAoK,EAAAnQ,EAAAwE,OAAAkC,OAAA,CACI0J,KAAK,KACDf,EAAc,aAAc,CAC5BgB,aAAcd,EACde,MAAO,CACH,CAAEC,UAAU,EAAM3M,QAAS,sDAM3CkC,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAM+P,UAAU,gBAAgBE,aAAc,WAC1C,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,SAAb,kCACAjK,EAAA9F,EAAA+F,cAAA,gKAIRD,EAAA9F,EAAA+F,cAAAyK,EAAAxQ,EAAA,CACIoO,MAAOA,EACPD,SAAUzJ,KAAKyJ,SACfsC,aAAc,SAACrK,EAAOsK,GAAR,OAAevB,EAAKjK,MAAMyL,WAAWD,EAAG,GAAGxO,MACzD0O,WAAYxC,EAAMpP,OAAS,EAC3B6R,UAAU,KAIlB/K,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAMiQ,aAAc,WAChB,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,SAAb,qDACAjK,EAAA9F,EAAA+F,cAAA,8IAIRD,EAAA9F,EAAA+F,cAAA+K,EAAA9Q,EACQqP,EAAc,WAAY,CAC1BgB,aAAcZ,MAM1B3J,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAMiQ,aAAc,WAChB,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,iBAAb,2EACAjK,EAAA9F,EAAA+F,cAAA,gHAIRD,EAAA9F,EAAA+F,cAAA+K,EAAA9Q,EACQqP,EAAc,aAAc,CAC5BgB,aAAcX,EACdY,MAAO,CACH,CAAEC,UAAU,EAAM3M,QAAS,mDAM3CkC,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAMiQ,aAAc,WAChB,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,iBAAb,kCACAjK,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,UAAb,iPAIRjK,EAAA9F,EAAA+F,cAAA+K,EAAA9Q,EAAAwE,OAAAkC,OAAA,CACIE,KAAK,QACLmK,YAAY,wCACR1B,EAAc,SAAU,CACxBgB,aAAcV,EACdW,MAAO,CACH,CAAEC,UAAU,EAAM3M,QAAS,gEAM3CkC,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAM+P,UAAU,QAAQE,aAAc,WAClC,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,iBAAb,4BACAjK,EAAA9F,EAAA+F,cAAA,4GAIRD,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,aACXjK,EAAA9F,EAAA+F,cAAA+K,EAAA9Q,EAAAwE,OAAAkC,OAAA,CACIqK,YAAY,IACR1B,EAAc,cAAe,CAC7BgB,aAAcT,EACdU,MAAO,CACH,CAAEC,UAAU,EAAM3M,QAAS,6CAIvCkC,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,IACXjK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,UAAUG,QAASxL,KAAKQ,MAAMf,WAAY6M,IAAKnB,eA7UlEhJ,IAAMC,WAuVfmK,kBAAa/E,IC3VtBD,GAAKlL,OAAOkL,GACZiF,eACF,SAAAA,IAAc,IAAA3M,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwM,IACV3M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0M,GAAArM,KAAAH,QA2CJyM,gBAAkB,WACd,IAAIxD,EAAQlC,SAAS2F,eAAe,YACpCzD,EAAM0D,OAAS,EAFK,IAGdC,EAAoB/M,EAAKO,MAAzBwM,gBACiB,GAAnBA,GACA3D,EAAM4D,OACNhN,EAAKoI,SAAS,CACV2E,gBAAiB,KAEK,GAAnBA,GACP/M,EAAKoI,SAAS,CACV2E,gBAAiB,IAErB3D,EAAM6D,SACoB,GAAnBF,GACP3D,EAAM4D,OACNhN,EAAKoI,SAAS,CACV2E,gBAAiB,KAEK,GAAnBA,IACP3D,EAAM4D,OACNhN,EAAKoI,SAAS,CACV2E,gBAAiB,MAlEf/M,EAuEdkN,YAAc,WAAM,IACVC,EAAmBnN,EAAKW,MAAMmJ,SAA9BqD,eAEiB,GADGnN,EAAKO,MAAzBwM,gBAEFrF,GAAG0F,UAAU,CACT1C,QAASyC,EACT3C,QAAS,WACLxK,EAAKoI,SAAS,CACV2E,gBAAiB,OAM7BrF,GAAG2F,WAAW,CACV3C,QAASyC,EACT3C,QAAQ,WACJxK,EAAKoI,SAAS,CACV2E,gBAAiB,QAzFvB/M,EAiGdsN,UAAY,WACJvQ,IACAiD,EAAKkN,cAELlN,EAAK4M,mBAnGT5M,EAAKO,MAAQ,CACTgN,UAAU,EACV1D,MAAO,GACP2D,UAAW,KACXzF,SAAU,KACVgF,gBAAiB,EACjBU,aAAa,EACbC,cAAe,GACfC,gBAAiB,EACjBC,QAAS,IAXH5N,mFAgBVG,KAAK0N,gEAGW,IAAArN,EAAAL,KAChB,GAAIpD,IACA2K,GAAGoG,eAAe,CACdtD,QAAS,SAAC1L,GAIN0B,EAAK4H,SAAS,CACV2E,gBAAiB,WAI1B,CACH,IAAI3D,EAAQlC,SAAS2F,eAAe,YAChCzD,GACAA,EAAM2E,iBAAiB,QAAS,WAC5BvN,EAAK4H,SAAS,CACV2E,gBAAiB,MAEtB,qCAmEN,IAAA1C,EAAAlK,KACG2K,EAAkB3K,KAAKQ,MAAM6I,KAA7BsB,cACFiC,EAAoB5M,KAAKI,MAAzBwM,gBAFDhC,EAG4E5K,KAAKQ,MAAMmJ,SAAtFkB,EAHDD,EAGCC,WAHDC,EAAAF,EAGalB,aAHb,IAAAoB,EAGqB,GAHrBA,EAGyBC,EAHzBH,EAGyBG,SAAU8C,EAHnCjD,EAGmCiD,WAAYC,EAH/ClD,EAG+CkD,SAAUd,EAHzDpC,EAGyDoC,eAC1De,EAASrE,GAAyB,GAAhBA,EAAMpP,OAAcoP,EAAM,GAAGlM,IAAM,GACrDwQ,EAAYpR,IAAaoQ,EAAiBc,EAC9C,OACI1M,EAAA9F,EAAA+F,cAAA,QAAMgK,UAAU,wBACZjK,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAM+P,UAAU,aAAaE,aAAc,WACvC,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,SAAb,2CAIRjK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,aAAaR,GAEtBmD,EAAY5M,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,cACvBjK,EAAA9F,EAAA+F,cAAA,KAAGmK,QAASxL,KAAKmN,UAAW9B,UAA+B,GAAnBuB,EAAuB,UAAY,cAC1EhQ,IAAa,KAAOwE,EAAA9F,EAAA+F,cAAA,SAAOC,GAAG,WAAWgL,IAAKwB,KAC1C,OAMjBC,EAAS3M,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAM+P,UAAU,gBAAgBE,aAAc,WACnD,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,SAAb,qCAIRjK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,eAAcjK,EAAA9F,EAAA+F,cAAA,OAAKmK,QAAS,kBAAMtB,EAAK1J,MAAMyL,WAAW8B,IAASzB,IAAKyB,MAC/E,KAIVhD,EAAW3J,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAMiQ,aAAc,WAC3B,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,SAAb,wDAIRjK,EAAA9F,EAAA+F,cAAA+K,EAAA9Q,EACQqP,EAAc,WAAY,CAC1BgB,aAAcZ,MAIhB,KAGd3J,EAAA9F,EAAA+F,cAAAiK,EAAAhQ,EAAA,CAAMiQ,aAAc,WAChB,OACInK,EAAA9F,EAAA+F,cAAA,WACID,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,SAAb,qCAIRjK,EAAA9F,EAAA+F,cAAA+K,EAAA9Q,EACQqP,EAAc,aAAc,CAC5BgB,aAAckC,cA1KhB1L,IAAMC,WAuLjBmK,kBAAaC,ICpLtBjF,GAAKlL,OAAOkL,GAiNH0G,eA/Mb,SAAAA,IAAc,IAAApO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiO,IACZpO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmO,GAAA9N,KAAAH,QA0BFN,SAAW,WACTA,IAAWmB,KAAK,SAAAlC,GACd,IAAIC,EAAOD,EAAIC,KACf,GAAIA,GAAuB,GAAfA,EAAKtE,OAAa,CAC5B,IAAI4T,EAAQrR,IAAuB+B,EAAK,GAAGuP,UAAUtM,KACrDhC,EAAKoI,SAAS,CACZiG,cAjCMrO,EAuCdoM,WAAa,SAACzO,GACZqC,EAAKoI,SAAS,CACZqF,aAAa,EACbC,cAAe,CAAC/P,GAChBgQ,gBAAiB,KA3CP3N,EA+CduO,aAAe,WACbvO,EAAKoI,SAAS,CACZqF,aAAa,KAjDHzN,EAqDdwO,WAAa,WACX,IAAIC,EAASxO,OAAOkC,OAAO,GAAInC,EAAKO,MAAMuJ,UACtCjJ,EAAQlE,EAAS,oBACjBkE,IACF4N,EAAOC,aAAe7N,GAEpBb,EAAKO,MAAMiN,UACbiB,EAAOE,MAAQ3O,EAAKO,MAAMiN,UAE1BiB,EAAOE,MAAQ,EAEjBF,EAAOrD,OAASqD,EAAOrD,OAAO5Q,QAAQ,OAAQ,IAC9CiU,EAAOG,YAAc5O,EAAKO,MAAMsO,eACzBJ,EAAO5E,aACP4E,EAAOT,kBACPS,EAAOR,gBACPQ,EAAOnD,YAEd,IAAIpD,EAAO,SAACuG,GACVnP,EAAWmP,GAAQzN,KAAK,SAAAlC,GACtBR,EAAA7C,EAAM+O,QAAQ,8BACbjB,MAAM,SAAAhG,GACP1G,EAAY,oBACZoE,WAAW,WACTjB,EAAKW,MAAMC,QAAQpG,QAAnB,uBACC,QAIP,GAAIuC,IACEiD,EAAKO,MAAM4M,eACbzF,GAAGoH,YAAY,CACbpE,QAAS1K,EAAKO,MAAM4M,eACpB4B,mBAAoB,EACpBvE,QAAS,SAAC1L,GACR2P,EAAOO,SAAWlQ,EAAImQ,SACtBR,EAAOrF,MAAQ,EACflB,EAAKuG,OAITA,EAAOrF,MAAQ,EACflB,EAAKuG,SAGP,GAAIzO,EAAKO,MAAM2O,UAAW,CACxB,IAAIpF,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAUhK,EAAKO,MAAM2O,UAAW,YAChD3P,EAAYuK,GAAU9I,KAAK,SAAAjC,GACzB0P,EAAOrF,MAAQrK,EAAK0C,GACpByG,EAAKuG,UAGPA,EAAOrF,MAAQ,EACflB,EAAKuG,IA3GGzO,EAkHdmP,cAAgB,WACdnP,EAAKoP,UAAUzO,MAAM6I,KAAK6F,eAAe,CAAEC,OAAO,GAAQ,SAACC,EAAQd,GACjE,GAAKc,EAMH,IAAK,IAAIC,KAAKD,EAAQ,CACpB,IAAI7Q,EAAQ6Q,EAAOC,GAEnB,YADAlR,EAAA7C,EAAMyD,KAAKR,EAAM6Q,OAAO,GAAGlQ,cAP7BW,EAAKoI,SAAS,CACZqH,mBAAmB,EACnB3F,SAAU7J,OAAOkC,OAAO,GAAInC,EAAKO,MAAMuJ,SAA7B7J,OAAAyP,EAAA,EAAAzP,CAAA,GAA4CD,EAAKoP,UAAUzO,MAAM6I,KAAKC,iBAAtE,CAAwFuE,WAAY7T,EAAU,IAAIQ,MAASsT,SAAUjO,EAAKO,MAAM0N,SAAUd,eAAgBnN,EAAKO,MAAM4M,uBAvHzLnN,EAmId2P,WAAa,WACX3P,EAAKoI,SAAS,CACZqH,mBAAmB,KArITzP,EAyIdJ,WAAa,WACNI,EAAK4P,WACR5P,EAAK4P,UAAW,EAChBhQ,IAAaoB,KAAK,SAAAlC,GAChBkB,EAAK4P,UAAW,EAChB5P,EAAKoI,SAAS,CACZ0B,SAAU7J,OAAOkC,OAAO,GAAInC,EAAKO,MAAMuJ,SAAU,CAAEwB,YAAaxM,EAAI+Q,MACpEhB,QAAS/P,EAAIlD,QAEd2N,MAAM,SAAAhG,GACPvD,EAAK4P,UAAW,MAnJR5P,EAwJdiK,aAAe,SAACJ,EAAO9K,GACrB,IAAIyO,EAAY,KACZzO,IACFyO,EAAYzO,EAAK0C,IAEnBzB,EAAKoI,SAAS,CACZ0B,SAAU7J,OAAOkC,OAAO,GAAInC,EAAKO,MAAMuJ,SAAU,CAAED,UACnD2D,eA/JUxN,EAmKdoK,YAAc,SAACxD,EAAMvE,GACP,MAARA,EACFrC,EAAKoI,SAAS,CACZ+E,eAAgBvG,IAGdA,GACF5G,EAAKoI,SAAS,CACZ8G,UAAWtI,EACXqH,SAAUnH,IAAIE,gBAAgBJ,MA1KpC5G,EAAKO,MAAQ,CACXiN,UAAW,KACXC,aAAa,EACbC,cAAe,GACfC,gBAAiB,EACjBU,MAAO,GACPvE,SAAU,GACVoF,UAAW,KACXjB,SAAU,IAVAjO,oFAeZ,IAAIqO,EAAQvS,EAAcqE,KAAKQ,MAAMC,QAAQ1D,SAASuD,OAAQ,MAC1D4N,EACFlO,KAAKiI,SAAS,CACZiG,UAGFlO,KAAKN,WAGPM,KAAKP,8CA2JE,IAAAY,EAAAL,KAAA0H,EACmF1H,KAAKI,MAAzFkN,EADC5F,EACD4F,YAAaC,EADZ7F,EACY6F,cAAeC,EAD3B9F,EAC2B8F,gBAAiBU,EAD5CxG,EAC4CwG,MAAOoB,EADnD5H,EACmD4H,kBAAmB3F,EADtEjC,EACsEiC,SAE7E,OACEvI,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,cAEXiC,EAAclM,EAAA9F,EAAA+F,cAACsO,EAAArU,EAAD,CAAesU,QAAS5P,KAAKoO,aAAcyB,KAAMtC,EAAe7L,MAAO8L,IAAsB,KAE7GpM,EAAA9F,EAAA+F,cAAA,WAAKD,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,SAASiB,IAAK4B,KAClC9M,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,QAEXiE,EAAoBlO,EAAA9F,EAAA+F,cAACyO,GAAD,CAAa7D,WAAYjM,KAAKiM,WAAYtC,SAAUA,IAA2BvI,EAAA9F,EAAA+F,cAAC4N,GAAD,CAAWtF,SAAUA,EAAUsC,WAAYjM,KAAKiM,WAAYnC,aAAc9J,KAAK8J,aAAcrK,WAAYO,KAAKP,WAAYwK,YAAajK,KAAKiK,YAAa8F,SAAO,EAACC,oBAAqB,SAAC3G,GAAD,OAAUhJ,EAAK4O,UAAY5F,MAGxTjI,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,gBAEXiE,EAAoBlO,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,QACjCjK,EAAA9F,EAAA+F,cAAA4O,EAAA3U,EAAA,CAAQkQ,QAASxL,KAAKwP,YAAtB,4BACApO,EAAA9F,EAAA+F,cAAA4O,EAAA3U,EAAA,CAAQkQ,QAASxL,KAAKqO,YAAtB,6BACOjN,EAAA9F,EAAA+F,cAAA4O,EAAA3U,EAAA,CAAQkQ,QAASxL,KAAKgP,eAAtB,yBAvMI7M,IAAMC,WCDzBmF,GAAKlL,OAAOkL,GACZ2I,8MACJ9P,MAAQ,CACN+P,aAAc,MACdrC,SAAU,GACVnG,YAAa,EACbyI,WAAY,GACZ9C,aAAa,EACbC,cAAe,GACfC,gBAAiB,EACjBU,MAAO,MAOTxO,SAAW,WACTA,IAAWmB,KAAK,SAAAlC,GACd,IAAIC,EAAOD,EAAIC,KACf,GAAIA,GAAuB,GAAfA,EAAKtE,OAAa,CAC5B,IAAI4T,EAAQrR,IAAuB+B,EAAK,GAAGuP,UAAUtM,KACrDhC,EAAKoI,SAAS,CACZiG,gBA6CRmC,SAAW,WACTxQ,EAAKW,MAAM6I,KAAK6F,eAAe,CAAEC,OAAO,GAAQ,SAACC,EAAQd,GACvD,GAAKc,EAOH,IAAK,IAAIC,KAAKD,EAAQ,CACpB,IAAI7Q,EAAQ6Q,EAAOC,GAEnB,YADAlR,EAAA7C,EAAMyD,KAAKR,EAAM6Q,OAAO,GAAGlQ,cAL7BoP,EAAOgC,MAAQhC,EAAOgC,MAAMC,WAAWlW,QAAQ,OAAQ,IACvDwF,EAAK2Q,QAAQlC,EAAOgC,YAY1BrE,WAAa,SAACzO,GACZqC,EAAKoI,SAAS,CACZqF,aAAa,EACbC,cAAe,CAAC/P,GAChBgQ,gBAAiB,OAIrBY,aAAe,WACbvO,EAAKoI,SAAS,CACZqF,aAAa,OAIjBmD,eAAiB,WACf5Q,EAAKW,MAAMC,QAAQnC,KAAK,oGAxFxB0B,KAAKN,2CAeC4Q,GAAO,INnCErF,EMmCF5K,EAAAL,MNnCEiL,EMoCLqF,ENnCLrS,EAAQ,CACbT,IAAK,0BACLC,OAAQ,MACRM,OAAQ,CACNkN,aM+BepK,KAAK,SAAAlC,GACpB,IAAIC,EAAOD,EAAIC,KACXA,EAAK8R,YACP9R,EAAKkP,SAAWjR,IAAuB+B,EAAK8R,UAAU7O,MAEpDjD,EAAK+R,YACP/R,EAAK8K,MAAQ,CAAC,CAAElM,IAAKX,IAAuB+B,EAAK+R,UAAU9O,QAE1DjF,KACGgC,EAAKiQ,SACPtH,GAAGqJ,cAAc,CACf9B,SAAUlQ,EAAKiQ,SACfD,mBAAoB,EACpBvE,QAAS,SAAC1L,GACRC,EAAKoO,eAAiBrO,EAAI4L,QAC1BlK,EAAK4H,SAAS,CACZkI,aAAc,KACdC,WAAYxR,KAGhB4L,KAAM,SAACpH,OAUX/C,EAAK4H,SAAS,CACZkI,aAAc,KACdC,WAAYxR,uCA2CX,IAAA8I,EACgF1H,KAAKI,MAAtF+P,EADCzI,EACDyI,aAAcC,EADb1I,EACa0I,WAAY9C,EADzB5F,EACyB4F,YAAaC,EADtC7F,EACsC6F,cAAeC,EADrD9F,EACqD8F,gBAAiBU,EADtExG,EACsEwG,MACrEvD,EAAkB3K,KAAKQ,MAAM6I,KAA7BsB,cACR,OACEvJ,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,qBAEXiC,EAAclM,EAAA9F,EAAA+F,cAACsO,EAAArU,EAAD,CAAesU,QAAS5P,KAAKoO,aAAcyB,KAAMtC,EAAe7L,MAAO8L,IAAsB,KAG1F,QAAjB2C,EAAyB/O,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,0BACtCjK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,QACfjK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,QACbjK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,OACbjK,EAAA9F,EAAA+F,cAAA,mNACAD,EAAA9F,EAAA+F,cAAA,8IAEFD,EAAA9F,EAAA+F,cAAA,QAAMgK,UAAU,qBACdjK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,SAAf,oDACAjK,EAAA9F,EAAA+F,cAAA+K,EAAA9Q,EAAAwE,OAAAkC,OAAA,CACEE,KAAK,SACDyI,EAAc,QAAS,CACzBgB,aAAc3L,KAAKI,MAAMkQ,MACzB1E,MAAO,CACL,CAAEC,UAAU,EAAM3M,QAAS,mDAIjCkC,EAAA9F,EAAA+F,cAAA4O,EAAA3U,EAAA,CAAQ+P,UAAU,aAAawF,KAAK,QAAQrF,QAASxL,KAAKqQ,UAA1D,mBAGGjP,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,UACpBjK,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,OAAMjK,EAAA9F,EAAA+F,cAAA,OAAKiL,IAAK4B,KAC/B9M,EAAA9F,EAAA+F,cAACyO,GAAD,CAAa7D,WAAYjM,KAAKiM,WAAYtC,SAAUyG,IACpDhP,EAAA9F,EAAA+F,cAAA,OAAKgK,UAAU,gBACbjK,EAAA9F,EAAA+F,cAAA,KAAGgK,UAAU,UAAUlK,KAAK,uBAAuB2P,OAAO,UAA1D,sDACA1P,EAAA9F,EAAA+F,cAAA,QAAMmK,QAASxL,KAAKyQ,eAAgBpF,UAAU,eAA9C,sCA3ISlJ,IAAMC,WAqJhBmK,kBAAa2D,yBChIb3O,GA1BA,CACX,CACIM,KAAM,IACNkP,SAAU,qBACVnP,OAAM,GAEV,CACIC,KAAM,cACNE,2LCNF,OAAOX,EAAA9F,EAAA+F,cAAA,WACHD,EAAA9F,EAAA+F,cAAA,OAAKiL,IAAK0E,eAJK7O,IAAMC,YDW3B,CACIP,KAAM,eACNE,UAAWkP,EACX1P,OAAQ,CACJ,CACIM,KAAM,qBACNE,UAAWmP,IAEf,CACIrP,KAAM,qBACNE,UAAWoP,OEZrBC,GAAcC,QACW,cAA7BhV,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASb,MACvB,2DAsCN,SAASmV,GAAgBC,EAAOjU,GAC9BuL,UAAU2I,cACPC,SAASF,GACT1Q,KAAK,SAAA6Q,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxR,QACfyI,UAAU2I,cAAcO,YAI1BC,QAAQC,IACN,iHAKE3U,GAAUA,EAAO4U,UACnB5U,EAAO4U,SAASR,KAMlBM,QAAQC,IAAI,sCAGR3U,GAAUA,EAAO6U,WACnB7U,EAAO6U,UAAUT,UAO5BtI,MAAM,SAAA7K,GACLyT,QAAQzT,MAAM,4CAA6CA,oBC/F1D,SAAsBjB,GACzB,IAAIE,EAAMnB,OAAOU,SAASoE,KAAKjF,MAAM,KAAK,GAC1CyD,EAAYnC,GAAKqD,KAAK,SAAAlC,GAAO,IAAAyT,EAMrBzT,EAAIC,KAJJyT,EAFqBD,EAErBC,MACAC,EAHqBF,EAGrBE,UACAC,EAJqBH,EAIrBG,SACAC,EALqBJ,EAKrBI,UAEJnW,OAAOkL,GAAGjK,OAAO,CACbmV,OAAO,EACPJ,QACAC,YACAC,WACAC,YACAE,UAAW,CAAC,iBAAkB,cAAe,aAAc,mBAAoB,YAAa,aAAc,YAAa,iBAAkB,cAAe,qBCPpKC,GAEAC,IAAS9Q,OACLV,EAAA9F,EAAA+F,cAACwR,EAAA,EAAD,KAEQtR,GAAOC,IAAI,SAACC,EAAOC,GACf,OAAON,EAAA9F,EAAA+F,cAACM,EAAA,EAAD,CAAOlG,IAAKiG,EAAOE,MAAOH,EAAMG,MAAOC,KAAMJ,EAAMI,KAAMC,OAAQ,SAAAtB,GAAK,OACzEiB,EAAMsP,SAAU3P,EAAA9F,EAAA+F,cAACM,EAAA,EAAD,CAAUmR,GAAIrR,EAAMsP,WAAa3P,EAAA9F,EAAA+F,cAACI,EAAMM,UAAPjC,OAAAkC,OAAA,GAAqBxB,EAArB,CAA4Be,OAAQE,EAAMF,gBAK5GwF,SAASgM,cAAc,UFCnB,SAAkBzV,GACvB,GAA6C,kBAAmBuL,UAAW,CAGzE,GADkB,IAAIlC,IAAIqM,IAAwB3W,OAAOU,SAASoE,MACpD8R,SAAW5W,OAAOU,SAASkW,OAIvC,OAGF5W,OAAOuR,iBAAiB,OAAQ,WAC9B,IAAM2D,EAAK,GAAArQ,OAAM8R,IAAN,sBAEP5B,IAgEV,SAAiCG,EAAOjU,GAEtC4V,MAAM3B,GACH1Q,KAAK,SAAAnC,GAEJ,IAAMyU,EAAczU,EAASY,QAAQ8T,IAAI,gBAEnB,MAApB1U,EAAS2U,QACO,MAAfF,IAA8D,IAAvCA,EAAYnX,QAAQ,cAG5C6M,UAAU2I,cAAc8B,MAAMzS,KAAK,SAAA6Q,GACjCA,EAAa6B,aAAa1S,KAAK,WAC7BxE,OAAOU,SAASwM,aAKpB+H,GAAgBC,EAAOjU,KAG1B8L,MAAM,WACL4I,QAAQC,IACN,mEArFAuB,CAAwBjC,EAAOjU,GAI/BuL,UAAU2I,cAAc8B,MAAMzS,KAAK,WACjCmR,QAAQC,IACN,gHAMJX,GAAgBC,EAAOjU,MEtB/BkU","file":"static/js/main.04fae486.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/help_center.ba972945.jpg\";","//格式化时间\r\nconst parseTime = (time, cFormat) => {\r\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n  let date\r\n  if (typeof time === 'object') {\r\n    date = time\r\n  } else {\r\n    time = time.replace(/-/g, '/')\r\n    if (('' + time).length === 10) time = parseInt(time) * 1000\r\n    date = new Date(time)\r\n  }\r\n  const formatObj = {\r\n    y: date.getFullYear(),\r\n    m: date.getMonth() + 1,\r\n    d: date.getDate(),\r\n    h: date.getHours(),\r\n    i: date.getMinutes(),\r\n    s: date.getSeconds(),\r\n    a: date.getDay()\r\n  }\r\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n    let value = formatObj[key]\r\n    // Note: getDay() returns 0 on Sunday\r\n    if (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }\r\n    if (result.length > 0 && value < 10) {\r\n      value = '0' + value\r\n    }\r\n    return value || 0\r\n  })\r\n  return time_str\r\n}\r\n/**\r\n* 获取queryString*\r\n*/\r\nconst queryUrlParam = (str, name) => {\r\n  var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\r\n  if (str.indexOf('?') >= 0) {\r\n    var r = str.split(\"?\")[1].match(reg);\r\n    if (r != null) return (r[2]);\r\n    return null;\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * 本地储存\r\n * @param {*} key \r\n * @param {*} value \r\n */\r\nconst setLocal = (key, value) => {\r\n  return window.localStorage.setItem(key, value)\r\n}\r\n\r\n/**\r\n * 获取本地储存\r\n * @param {*} key \r\n */\r\nconst getLocal = (key) => {\r\n  return window.localStorage.getItem(key)\r\n}\r\n\r\n/**\r\n * 移除某个本地储存\r\n * @param {*} key \r\n */\r\nconst removeLocal = (key) => {\r\n  return window.localStorage.removeItem(key)\r\n}\r\n\r\n\r\n\r\n//判断是否是微信浏览器的函数\r\nconst isWeiXin = () => {\r\n  //window.navigator.userAgent属性包含了浏览器类型、版本、操作系统类型、浏览器引擎类型等信息，这个属性可以用来判断浏览器类型\r\n  // let ua = window.navigator.userAgent.toLowerCase();\r\n  // if (ua.match(/MicroMessenger/i) == 'micromessenger') {// 通过正则表达式匹配ua中是否含有MicroMessenger字符串\r\n  //   return true;\r\n  // } else {\r\n  //   return false;\r\n  // }\r\n  //限制只能微信打开\r\n  return true\r\n}\r\n\r\n\r\nexport {\r\n  parseTime,\r\n  queryUrlParam,\r\n  setLocal,\r\n  getLocal,\r\n  removeLocal,\r\n  isWeiXin\r\n}","export function staticHost2ApiHost() {\r\n    var mHost = window.location.hostname\r\n    return {\r\n        'localhost': 'https://symy.powerionics.cn',\r\n    }[mHost] || 'https://symy.powerionics.cn'\r\n}","import axios from 'axios'\r\nimport { staticHost2ApiHost } from './env'\r\nimport { Toast } from 'antd-mobile';\r\n// axios.defaults.withCredentials = true;\r\n\r\nlet pending = []; //声明一个数组用于存储每个ajax请求的取消函数和ajax标识\r\nlet cancelToken = axios.CancelToken;\r\nlet removePending = (config) => {\r\n    for(let p in pending){\r\n        if(pending[p].u == config.url + '&' + config.method) { //当当前请求在数组中存在时执行函数体\r\n            pending[p].f(); //执行取消操作\r\n            pending.splice(p, 1); //把这条记录从数组中移除\r\n        }\r\n    }\r\n}\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: staticHost2ApiHost(), // api 的 base_url\r\n  // timeout: 5000, // 请求超时时间\r\n  // headers: {\r\n  //   'Content-Type': 'application/json',\r\n  //   'X-Requested-With': 'XMLHttpRequest',\r\n  // },\r\n  params: {}\r\n})\r\n// request拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    Toast.loading('', 0)\r\n    removePending(config); //在一个ajax发送前执行一下取消操作\r\n    config.cancelToken = new cancelToken((c)=>{\r\n        // 这里的ajax标识我是用请求地址&请求方式拼接的字符串，当然你可以选择其他的一些方式\r\n        pending.push({ u: config.url + '&' + config.method, f: c });  \r\n    });\r\n    // Object.assign(config.params,{requestId:new Date().getTime()+''+parseInt(Math.random*1000),appType:20})\r\n    return config\r\n  },\r\n  error => {\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\n// response 拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    let res = response.data;\r\n    Toast.hide()\r\n    removePending(response.config);  //在一个ajax响应后再执行一下取消操作，把已经完成的请求从pending中移除\r\n    if (res.code != 0) {\r\n      Toast.info(JSON.stringify(res),1)\r\n      return Promise.reject(res)\r\n    } else {\r\n      return response.data\r\n    }\r\n  },\r\n  error => {\r\n    Toast.hide()\r\n    Toast.info(error.message,1)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","import request from '@/utils/request'\r\n\r\nconst getSecret = (mobile) => {\r\n  return request({\r\n    url: '/api/speech/info-mobile',\r\n    method: 'get',\r\n    params: {\r\n      mobile\r\n    }\r\n  })\r\n}\r\n\r\n\r\nconst saveSecret = (data) => {\r\n  return request({\r\n    url: '/api/speech',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * 上传语音\r\n * @param {*} data \r\n */\r\nconst uploadAudio = (file) => {\r\n  return request({\r\n    url: '/static/ueditor/1.4.3.3/php/controller.php?action=uploadvideo',\r\n    method: 'post',\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    data: file\r\n  })\r\n}\r\n\r\n/**\r\n * 上传图片\r\n * @param {*} file \r\n */\r\nconst uploadImage = (file) => {\r\n  return request({\r\n    url: '/static/ueditor/1.4.3.3/php/controller.php?action=uploadimage',\r\n    method: 'post',\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    data: file\r\n  })\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取验证码\r\n */\r\nconst getCodeUrl = () => {\r\n  return request({\r\n    url: '/captcha/api',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n\r\n\r\n/**\r\n * 获取背景图片\r\n */\r\nconst getBgUrl = () => {\r\n  return request({\r\n    url: '/api/back-image',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * 获取token\r\n */\r\nconst getToken = (code) => {\r\n  return request({\r\n    url: '/api/wechat-token',\r\n    method: 'get',\r\n    params:{\r\n      code\r\n    }\r\n  })\r\n}\r\n\r\nconst getWxConfig = (url) => {\r\n  return request({\r\n    url: '/api/wechat-jssdk-config',\r\n    method: 'get',\r\n    params:{\r\n      url\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport {\r\n  getSecret,\r\n  saveSecret,\r\n  uploadAudio,\r\n  uploadImage,\r\n  getCodeUrl,\r\n  getBgUrl,\r\n  getToken,\r\n  getWxConfig\r\n}","import React from 'react'\r\nimport { Icon } from 'antd-mobile'\r\nimport { Route } from 'react-router-dom'\r\nimport { queryUrlParam, getLocal, isWeiXin, setLocal } from '@/utils/util'\r\nimport { getToken } from '@/api'\r\nimport '../styles/layout.scss'\r\nimport '../styles/form.scss'\r\n\r\nexport default class extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        let code = queryUrlParam(window.location.search, 'code');\r\n        let returnPath = queryUrlParam(window.location.search, 'returnPath');\r\n        let bgUrl = queryUrlParam(this.props.history.location.search, 'bg');\r\n        \r\n        if (!bgUrl) {\r\n            if (isWeiXin()) {\r\n                //微信浏览器需要跳转授权获取code\r\n                let token = getLocal('_secret_wx_token')\r\n                if (!token) {\r\n                    if (!code) {\r\n                        this.getAuth()\r\n                        return;\r\n                    } else {\r\n                        getToken(code).then(res => {\r\n                            token = res.data\r\n                            setLocal('_secret_wx_token', token)\r\n                            setTimeout(() => {\r\n                                this.props.history.push(returnPath)\r\n                            }, 100)\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.props.history.push(returnPath)\r\n                }\r\n            } else {\r\n                this.props.history.push('/powerionics/write')\r\n            }\r\n        }\r\n\r\n    }\r\n    getAuth() {\r\n        let appid = 'wx3edc25d22618f5e9';\r\n        // appid = 'wx77dc39692260dd64';\r\n        let returnPath = this.props.location.pathname\r\n        let redirectUri = encodeURIComponent('https://symy.powerionics.cn/secret/?returnPath='+returnPath);\r\n        \r\n        // let paramsCode = queryUrlParam(window.location.search, 'code');\r\n        // let code = sessionStorage.getItem('code')\r\n        // if (!paramsCode && !code) {\r\n        let url = `https://open.weixin.qq.com/connect/oauth2/authorize?appid=${appid}&redirect_uri=${redirectUri}&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect`\r\n        window.location.href = url\r\n        // } else if(!code){\r\n        //     sessionStorage.setItem('code', paramsCode)\r\n        //     window.history.back()\r\n        // }\r\n    }\r\n    render() {\r\n        let token = getLocal('_secret_wx_token')\r\n        return <div id=\"secret-wrap\">\r\n            {\r\n                token?this.props.routes.map((route, index) => {\r\n                    return <Route key={index} exact={route.exact} path={route.path} render={props => (\r\n                        <route.component {...props} routes={route.routes} />\r\n                    )} ></Route>\r\n                }):<Icon type=\"loading\"></Icon>\r\n            }\r\n        </div>\r\n    }\r\n}","import InlineWorker from 'inline-worker';\r\n\r\nexport class Recorder {\r\n    config = {\r\n        bufferLen: 4096,\r\n        numChannels: 2,\r\n        mimeType: 'audio/wav'\r\n    };\r\n\r\n    recording = false;\r\n\r\n    callbacks = {\r\n        getBuffer: [],\r\n        exportWAV: []\r\n    };\r\n\r\n    constructor(source, cfg) {\r\n        Object.assign(this.config, cfg);\r\n        this.context = source.context;\r\n        this.node = (this.context.createScriptProcessor ||\r\n        this.context.createJavaScriptNode).call(this.context,\r\n            this.config.bufferLen, this.config.numChannels, this.config.numChannels);\r\n\r\n        this.node.onaudioprocess = (e) => {\r\n            if (!this.recording) return;\r\n\r\n            var buffer = [];\r\n            for (var channel = 0; channel < this.config.numChannels; channel++) {\r\n                buffer.push(e.inputBuffer.getChannelData(channel));\r\n            }\r\n            this.worker.postMessage({\r\n                command: 'record',\r\n                buffer: buffer\r\n            });\r\n        };\r\n\r\n        source.connect(this.node);\r\n        this.node.connect(this.context.destination);    //this should not be necessary\r\n\r\n        let self = {};\r\n        this.worker = new InlineWorker(function () {\r\n            let recLength = 0,\r\n                recBuffers = [],\r\n                sampleRate,\r\n                numChannels;\r\n\r\n            this.onmessage = function (e) {\r\n                switch (e.data.command) {\r\n                    case 'init':\r\n                        init(e.data.config);\r\n                        break;\r\n                    case 'record':\r\n                        record(e.data.buffer);\r\n                        break;\r\n                    case 'exportWAV':\r\n                        exportWAV(e.data.type);\r\n                        break;\r\n                    case 'getBuffer':\r\n                        getBuffer();\r\n                        break;\r\n                    case 'clear':\r\n                        clear();\r\n                        break;\r\n                }\r\n            };\r\n\r\n            function init(config) {\r\n                sampleRate = config.sampleRate;\r\n                numChannels = config.numChannels;\r\n                initBuffers();\r\n            }\r\n\r\n            function record(inputBuffer) {\r\n                for (var channel = 0; channel < numChannels; channel++) {\r\n                    recBuffers[channel].push(inputBuffer[channel]);\r\n                }\r\n                recLength += inputBuffer[0].length;\r\n            }\r\n\r\n            function exportWAV(type) {\r\n                let buffers = [];\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n                }\r\n                let interleaved;\r\n                if (numChannels === 2) {\r\n                    interleaved = interleave(buffers[0], buffers[1]);\r\n                } else {\r\n                    interleaved = buffers[0];\r\n                }\r\n                let dataview = encodeWAV(interleaved);\r\n                let audioBlob = new Blob([dataview], {type: type});\r\n\r\n                this.postMessage({command: 'exportWAV', data: audioBlob});\r\n            }\r\n\r\n            function getBuffer() {\r\n                let buffers = [];\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n                }\r\n                this.postMessage({command: 'getBuffer', data: buffers});\r\n            }\r\n\r\n            function clear() {\r\n                recLength = 0;\r\n                recBuffers = [];\r\n                initBuffers();\r\n            }\r\n\r\n            function initBuffers() {\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    recBuffers[channel] = [];\r\n                }\r\n            }\r\n\r\n            function mergeBuffers(recBuffers, recLength) {\r\n                let result = new Float32Array(recLength);\r\n                let offset = 0;\r\n                for (let i = 0; i < recBuffers.length; i++) {\r\n                    result.set(recBuffers[i], offset);\r\n                    offset += recBuffers[i].length;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function interleave(inputL, inputR) {\r\n                let length = inputL.length + inputR.length;\r\n                let result = new Float32Array(length);\r\n\r\n                let index = 0,\r\n                    inputIndex = 0;\r\n\r\n                while (index < length) {\r\n                    result[index++] = inputL[inputIndex];\r\n                    result[index++] = inputR[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function floatTo16BitPCM(output, offset, input) {\r\n                for (let i = 0; i < input.length; i++, offset += 2) {\r\n                    let s = Math.max(-1, Math.min(1, input[i]));\r\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n                }\r\n            }\r\n\r\n            function writeString(view, offset, string) {\r\n                for (let i = 0; i < string.length; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            function encodeWAV(samples) {\r\n                let buffer = new ArrayBuffer(44 + samples.length * 2);\r\n                let view = new DataView(buffer);\r\n\r\n                /* RIFF identifier */\r\n                writeString(view, 0, 'RIFF');\r\n                /* RIFF chunk length */\r\n                view.setUint32(4, 36 + samples.length * 2, true);\r\n                /* RIFF type */\r\n                writeString(view, 8, 'WAVE');\r\n                /* format chunk identifier */\r\n                writeString(view, 12, 'fmt ');\r\n                /* format chunk length */\r\n                view.setUint32(16, 16, true);\r\n                /* sample format (raw) */\r\n                view.setUint16(20, 1, true);\r\n                /* channel count */\r\n                view.setUint16(22, numChannels, true);\r\n                /* sample rate */\r\n                view.setUint32(24, sampleRate, true);\r\n                /* byte rate (sample rate * block align) */\r\n                view.setUint32(28, sampleRate * 4, true);\r\n                /* block align (channel count * bytes per sample) */\r\n                view.setUint16(32, numChannels * 2, true);\r\n                /* bits per sample */\r\n                view.setUint16(34, 16, true);\r\n                /* data chunk identifier */\r\n                writeString(view, 36, 'data');\r\n                /* data chunk length */\r\n                view.setUint32(40, samples.length * 2, true);\r\n\r\n                floatTo16BitPCM(view, 44, samples);\r\n\r\n                return view;\r\n            }\r\n        }, self);\r\n\r\n        this.worker.postMessage({\r\n            command: 'init',\r\n            config: {\r\n                sampleRate: this.context.sampleRate,\r\n                numChannels: this.config.numChannels\r\n            }\r\n        });\r\n\r\n        this.worker.onmessage = (e) => {\r\n            let cb = this.callbacks[e.data.command].pop();\r\n            if (typeof cb == 'function') {\r\n                cb(e.data.data);\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    record() {\r\n        this.recording = true;\r\n    }\r\n\r\n    stop() {\r\n        this.recording = false;\r\n    }\r\n\r\n    clear() {\r\n        this.worker.postMessage({command: 'clear'});\r\n    }\r\n\r\n    getBuffer(cb) {\r\n        cb = cb || this.config.callback;\r\n        if (!cb) throw new Error('Callback not set');\r\n\r\n        this.callbacks.getBuffer.push(cb);\r\n\r\n        this.worker.postMessage({command: 'getBuffer'});\r\n    }\r\n\r\n    exportWAV(cb, mimeType) {\r\n        mimeType = mimeType || this.config.mimeType;\r\n        cb = cb || this.config.callback;\r\n        if (!cb) throw new Error('Callback not set');\r\n\r\n        this.callbacks.exportWAV.push(cb);\r\n\r\n        this.worker.postMessage({\r\n            command: 'exportWAV',\r\n            type: mimeType\r\n        });\r\n    }\r\n\r\n    static\r\n    forceDownload(blob, filename) {\r\n        let url = (window.URL || window.webkitURL).createObjectURL(blob);\r\n        let link = window.document.createElement('a');\r\n        link.href = url;\r\n        link.download = filename || 'output.wav';\r\n        let click = document.createEvent(\"Event\");\r\n        click.initEvent(\"click\", true, true);\r\n        link.dispatchEvent(click);\r\n    }\r\n}\r\n\r\nexport default Recorder;\r\n","import React from 'react'\r\nimport { Modal, List, InputItem, Toast, ImagePicker, TextareaItem, Button } from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport Recorder from '@/utils/recorder';\r\nimport { setLocal, removeLocal, isWeiXin } from '@/utils/util'\r\nimport { uploadImage } from '@/api'\r\nconst alert = Modal.alert;\r\nconst wx = window.wx;\r\nclass WriteForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            recorder: null,\r\n            audioStatus: 0,\r\n            time: 0,\r\n            limitTime: 30,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    startUserMedia(audio_context, stream, callback) {\r\n        let input = audio_context.createMediaStreamSource(stream);\r\n        this.setState({\r\n            recorder: new Recorder(input)\r\n        }, () => {\r\n            callback && callback()\r\n        })\r\n    }\r\n\r\n    stopRecording() {\r\n        let { recorder } = this.state;\r\n        recorder.stop();\r\n        recorder.exportWAV((blob) => {\r\n            this.props.setAudioUrl(blob)\r\n            this.setState({\r\n                audioStatus: 0\r\n            })\r\n        });\r\n        recorder.clear();\r\n    }\r\n\r\n    wxRecord() {\r\n        let { audioStatus, time, limitTime } = this.state;\r\n        clearTimeout(this.timer)\r\n        // if (time >= limitTime) {\r\n        //     alert('', `您的录音已经超过${limitTime}秒，是否重新录制？`, [\r\n        //         { text: '否', onPress: () => {}},\r\n        //         {\r\n        //             text: '是', onPress: () => {\r\n        //                 this.setState({\r\n        //                     time: 0\r\n        //                 }, () => {\r\n        //                     this.wxRecord()\r\n        //                 })\r\n        //             }\r\n        //         },\r\n        //     ])\r\n        // } else {\r\n            if (audioStatus == 0 || audioStatus == 2) {\r\n                wx.startRecord({\r\n                    success: () => {\r\n                        this.setState({\r\n                            audioStatus: 1,\r\n                            startAudio: true,\r\n                            time:0\r\n                        })\r\n                        clearTimeout(this.timer)\r\n                        this.timer = setInterval(() => {\r\n                            this.setState({\r\n                                time: this.state.time + 1\r\n                            }, () => {\r\n                                if (this.state.time >= this.state.limitTime) {\r\n                                    clearInterval(this.timer);\r\n                                    wx.stopRecord({\r\n                                        success: (res) => {\r\n                                            this.setState({\r\n                                                audioStatus: 0\r\n                                            })\r\n                                            this.props.setAudioUrl(res.localId, 'wx')\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                        }, 1000)\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                clearTimeout(this.timer)\r\n                wx.stopRecord({\r\n                    success: (res) => {\r\n                        this.setState({\r\n                            audioStatus: 0\r\n                        })\r\n                        this.props.setAudioUrl(res.localId, 'wx')\r\n                    },\r\n                    fail: (e) => {\r\n                    }\r\n                })\r\n            }\r\n        // }\r\n    }\r\n\r\n    comonRecord = () => {\r\n        let { audioStatus, recorder } = this.state;\r\n        clearTimeout(this.timer)\r\n        // return false;\r\n        const func = () => {\r\n            let { audioStatus, recorder } = this.state;\r\n            if (audioStatus == 0 || audioStatus == 2) {\r\n                this.setState({\r\n                    audioStatus: 1,\r\n                    time: 0,\r\n                    startAudio:true\r\n                })\r\n                recorder.record();\r\n                clearTimeout(this.timer)\r\n                this.timer = setInterval(() => {\r\n                    this.setState({\r\n                        time: this.state.time + 1\r\n                    }, () => {\r\n                        if (this.state.time >= this.state.limitTime) {\r\n                            clearInterval(this.timer);\r\n                            this.stopRecording()\r\n                        }\r\n                    })\r\n                }, 1000)\r\n            } else if (audioStatus == 1) {\r\n                this.stopRecording()\r\n            }\r\n        }\r\n        if (this.state.time >= this.state.limitTime) {\r\n\r\n            alert('', `您的录音已经超过${this.state.limitTime}秒，是否重新录制？`, [\r\n                { text: '否', onPress: () => {} },\r\n                {\r\n                    text: '是', onPress: () => {\r\n                        this.setState({\r\n                            time: 0\r\n                        }, () => {\r\n                            recorder.clear();\r\n                            this.record()\r\n                        })\r\n                    }\r\n                },\r\n            ])\r\n\r\n        } else {\r\n            if (audioStatus == 0 && !recorder) {\r\n                let audio_context = null\r\n                try {\r\n                    // webkit shim\r\n                    window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n                    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;\r\n                    window.URL = window.URL || window.webkitURL;\r\n\r\n                    audio_context = new AudioContext;\r\n                    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\r\n                        removeLocal('_secret_')\r\n                        this.startUserMedia(audio_context, stream, func)\r\n                    }).catch(e => {\r\n                        setLocal('_secret_', JSON.stringify(this.props.form.getFieldsValue()))\r\n                        window.location.reload();\r\n                    });\r\n                } catch (e) {\r\n                    Toast.info('该浏览器不支持录音,请用其他浏览器或者微信打开')\r\n                }\r\n\r\n            } else {\r\n                func()\r\n            }\r\n        }\r\n    }\r\n\r\n    record = () => {\r\n        if (isWeiXin()) {\r\n            this.wxRecord()\r\n        } else {\r\n            this.comonRecord()\r\n        }\r\n    }\r\n\r\n    onChange = (files, type, index) => {\r\n        if (files.length != 0) {\r\n            let file = files[0].file;\r\n            let formData = new FormData();\r\n            formData.append('upfile', file)\r\n            uploadImage(formData).then(data => {\r\n                this.props.setImageFile(files, data)\r\n            })\r\n        } else {\r\n            this.props.setImageFile(files)\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { audioStatus, recorder, time, limitTime } = this.state\r\n        const { getFieldProps } = this.props.form;\r\n        let { say_to_you, files = [], username, order_code, mobile, captcha_val, captcha_url } = this.props.formData;\r\n\r\n        const filterTime = (time) => {\r\n            if (time < 10) {\r\n                time = '0' + time\r\n            }\r\n            return time\r\n        }\r\n\r\n        return (\r\n            <form className=\"my-form wirte-form\">\r\n                <List className=\"audio-list\" renderHeader={() => {\r\n                    return (\r\n                        <div className=\"audio-label-wrap\">\r\n                            <p className=\"label\">我想对您说：</p>\r\n                            <p>可选项,录制您想对TA说的话,限{limitTime}秒内!</p>\r\n                            {\r\n                                audioStatus == 1 ? <p className=\"tip\">录音中 00:{filterTime(time)}</p> : (this.state.startAudio ? <p className=\"tip\">已录音 00:{filterTime(time)}</p> : null)\r\n                            }\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <div className=\"audio-wrap\">\r\n                        <p onClick={this.record} className={audioStatus == 0 ? 'btn start' : 'btn pause'}></p>\r\n                    </div>\r\n                </List>\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">写给TA：</p>\r\n                            <p>填写您想对TA说的话,不限字数!</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <TextareaItem\r\n                        rows=\"4\"\r\n                        {...getFieldProps('say_to_you', {\r\n                            initialValue: say_to_you,\r\n                            rules: [\r\n                                { required: true, message: '请输入对TA说的话' },\r\n                            ],\r\n                        })}\r\n                    ></TextareaItem>\r\n                </List>\r\n\r\n                <List className=\"no-bg bg-list\" renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">永恒一刻：</p>\r\n                            <p>选填项！上传您想分享的图片，可选择上传或不上传！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <ImagePicker\r\n                        files={files}\r\n                        onChange={this.onChange}\r\n                        onImageClick={(index, fs) => this.props.previewImg(fs[0].url)}\r\n                        selectable={files.length < 1}\r\n                        multiple={false}\r\n                    />\r\n                </List>\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">送卡人姓名/昵称：</p>\r\n                            <p>选填项！如果您不想让对方知道是谁，可不填！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        {...getFieldProps('username', {\r\n                            initialValue: username\r\n                        })}\r\n                    ></InputItem>\r\n\r\n                </List>\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">powerionics淘宝或京东订单编号：</p>\r\n                            <p>可在您的淘宝京东订单内查询复制！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        {...getFieldProps('order_code', {\r\n                            initialValue: order_code,\r\n                            rules: [\r\n                                { required: true, message: '请输入订单编号' }\r\n                            ],\r\n                        })}\r\n                    ></InputItem>\r\n                </List>\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">手机号码：</p>\r\n                            <p className=\"danger\">必填项！请填写收卡人的手机号，此手机号即为对方查询留言的唯一密码，请核对无误！</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        type=\"phone\"\r\n                        placeholder=\"对方手机号码\"\r\n                        {...getFieldProps('mobile', {\r\n                            initialValue: mobile,\r\n                            rules: [\r\n                                { required: true, message: '请输入对方手机号码' },\r\n                            ]\r\n                        })}\r\n                    ></InputItem>\r\n                </List>\r\n\r\n                <List className=\"no-bg\" renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label require\">验证码：</p>\r\n                            <p>填入右边您看到的字母,区分大小写!</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <div className=\"code-wrap\">\r\n                        <InputItem\r\n                            placeholder=\"\"\r\n                            {...getFieldProps('captcha_val', {\r\n                                initialValue: captcha_val,\r\n                                rules: [\r\n                                    { required: true, message: '请输入验证码' },\r\n                                ],\r\n                            })}\r\n                        ></InputItem>\r\n                        <div className=\"\">\r\n                            <img className=\"codeImg\" onClick={this.props.getCodeUrl} src={captcha_url}></img>\r\n                        </div>\r\n                    </div>\r\n                </List>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default createForm()(WriteForm)","import React from 'react'\r\nimport { createForm } from 'rc-form';\r\nimport { List, InputItem, ImagePicker, TextareaItem } from 'antd-mobile';\r\nimport { isWeiXin } from '@/utils/util'\r\nconst wx = window.wx\r\nclass PreviewForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            disabled: true,\r\n            files: [],\r\n            imgFileId: null,\r\n            recorder: null,\r\n            audioPlayStatus: 0,\r\n            previewFlag: false,\r\n            previewImgArr: [],\r\n            previewImgIndex: 0,\r\n            codeUrl: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addAudioListenner()\r\n    }\r\n\r\n    addAudioListenner() {\r\n        if (isWeiXin()) {\r\n            wx.onVoicePlayEnd({\r\n                success: (res) => {\r\n                    // wx.stopVoice({\r\n                    //     localId: res.localId,\r\n                    // });\r\n                    this.setState({\r\n                        audioPlayStatus: 0\r\n                    })\r\n                }\r\n            });\r\n        } else {\r\n            let audio = document.getElementById('my_audio')\r\n            if (audio) {\r\n                audio.addEventListener('ended', () => {\r\n                    this.setState({\r\n                        audioPlayStatus: 3\r\n                    })\r\n                }, false)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    playCommonAudio = () => {\r\n        let audio = document.getElementById('my_audio')\r\n        audio.volume = 1;\r\n        let { audioPlayStatus } = this.state\r\n        if (audioPlayStatus == 0) {\r\n            audio.play()\r\n            this.setState({\r\n                audioPlayStatus: 1\r\n            })\r\n        } else if (audioPlayStatus == 1) {\r\n            this.setState({\r\n                audioPlayStatus: 2\r\n            })\r\n            audio.pause()\r\n        } else if (audioPlayStatus == 2) {\r\n            audio.play()\r\n            this.setState({\r\n                audioPlayStatus: 1\r\n            })\r\n        } else if (audioPlayStatus == 3) {\r\n            audio.play()\r\n            this.setState({\r\n                audioPlayStatus: 1\r\n            })\r\n        }\r\n    }\r\n\r\n    playWxAudio = () => {\r\n        let { wxAudioLocalId } = this.props.formData\r\n        let { audioPlayStatus } = this.state;\r\n        if (audioPlayStatus == 0) {\r\n            wx.playVoice({\r\n                localId: wxAudioLocalId,\r\n                success: () => {\r\n                    this.setState({\r\n                        audioPlayStatus: 1\r\n                    })\r\n                }\r\n            });\r\n            \r\n        } else {\r\n            wx.pauseVoice({\r\n                localId: wxAudioLocalId,\r\n                success:() => {\r\n                    this.setState({\r\n                        audioPlayStatus: 0\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    playAudio = () => {\r\n        if (isWeiXin()) {\r\n            this.playWxAudio()\r\n        } else {\r\n            this.playCommonAudio()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { getFieldProps } = this.props.form;\r\n        let { audioPlayStatus } = this.state;\r\n        let { say_to_you, files = [], username, created_at, audioUrl, wxAudioLocalId } = this.props.formData;\r\n        let imgUrl = files && files.length != 0 ? files[0].url : ''\r\n        let havaAudio = isWeiXin() ? wxAudioLocalId : audioUrl\r\n        return (\r\n            <form className=\"my-form preview-form\">\r\n                <List className=\"audio-list\" renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">我想对您说：</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <div>\r\n                        <p className=\"word-wrap\">{say_to_you}</p>\r\n                        {\r\n                            havaAudio ? <div className=\"audio-wrap\">\r\n                                <p onClick={this.playAudio} className={(audioPlayStatus == 1 ? 'btn end' : 'btn start')}></p>\r\n                                {isWeiXin() ? null : <audio id=\"my_audio\" src={audioUrl}></audio>}\r\n                            </div> : null\r\n                        }\r\n                    </div>\r\n                </List>\r\n\r\n                {\r\n                    imgUrl ? <List className=\"no-bg bg-list\" renderHeader={() => {\r\n                        return (\r\n                            <div>\r\n                                <p className=\"label\">永恒一刻：</p>\r\n                            </div>\r\n                        )\r\n                    }}>\r\n                        <div className=\"preview-img\"><img onClick={() => this.props.previewImg(imgUrl)} src={imgUrl}></img></div>\r\n                    </List> : null\r\n                }\r\n\r\n                {\r\n                    username ? <List renderHeader={() => {\r\n                        return (\r\n                            <div>\r\n                                <p className=\"label\">送卡人姓名/昵称：</p>\r\n                            </div>\r\n                        )\r\n                    }}>\r\n                        <InputItem\r\n                            {...getFieldProps('username', {\r\n                                initialValue: username\r\n                            })}\r\n                        ></InputItem>\r\n\r\n                    </List> : null\r\n                }\r\n\r\n                <List renderHeader={() => {\r\n                    return (\r\n                        <div>\r\n                            <p className=\"label\">发送时间：</p>\r\n                        </div>\r\n                    )\r\n                }}>\r\n                    <InputItem\r\n                        {...getFieldProps('created_at', {\r\n                            initialValue: created_at\r\n                        })}\r\n                    ></InputItem>\r\n\r\n                </List>\r\n\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default createForm()(PreviewForm)","import React from 'react'\r\nimport { Toast, Button } from 'antd-mobile';\r\nimport { getLocal, removeLocal, parseTime, queryUrlParam, isWeiXin } from '@/utils/util'\r\nimport { saveSecret, uploadAudio, getCodeUrl, getBgUrl } from '@/api'\r\nimport WxImageViewer from 'react-wx-images-viewer';\r\nimport { staticHost2ApiHost } from '@/utils/env'\r\nimport WriteForm from './components/writeForm'\r\nimport PreviewForm from './components/previewForm'\r\nconst wx = window.wx;\r\nclass WriteSecre extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      imgFileId: null,\r\n      previewFlag: false,\r\n      previewImgArr: [],\r\n      previewImgIndex: 0,\r\n      bgUrl: '',\r\n      formData: {},\r\n      audioBlod: null,\r\n      audioUrl: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    let bgUrl = queryUrlParam(this.props.history.location.search, 'bg');\r\n    if (bgUrl) {\r\n      this.setState({\r\n        bgUrl\r\n      })\r\n    } else {\r\n      this.getBgUrl()\r\n    }\r\n\r\n    this.getCodeUrl()\r\n  }\r\n\r\n  getBgUrl = () => {\r\n    getBgUrl().then(res => {\r\n      let data = res.data;\r\n      if (data && data.length != 0) {\r\n        let bgUrl = staticHost2ApiHost() + data[0].rel_image.path;\r\n        this.setState({\r\n          bgUrl\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  previewImg = (url) => {\r\n    this.setState({\r\n      previewFlag: true,\r\n      previewImgArr: [url],\r\n      previewImgIndex: 0\r\n    })\r\n  }\r\n\r\n  previewClose = () => {\r\n    this.setState({\r\n      previewFlag: false\r\n    })\r\n  }\r\n\r\n  formSubmit = () => {\r\n    let values = Object.assign({}, this.state.formData);\r\n    let token = getLocal('_secret_wx_token');\r\n    if (token) {\r\n      values.wechat_token = token\r\n    }\r\n    if (this.state.imgFileId) {\r\n      values.thumb = this.state.imgFileId\r\n    } else {\r\n      values.thumb = 0\r\n    }\r\n    values.mobile = values.mobile.replace(/\\s*/g, '');\r\n    values.captcha_key = this.state.codeKey\r\n    delete values.files\r\n    delete values.created_at\r\n    delete values.audioUrl\r\n    delete values.captcha_url\r\n\r\n    let func = (values) => {\r\n      saveSecret(values).then(res => {\r\n        Toast.success('提交成功')\r\n      }).catch(e => {\r\n        removeLocal('_secret_wx_token')\r\n        setTimeout(() => {\r\n          this.props.history.replace(`/powerionics/write`)\r\n        }, 100)\r\n      })\r\n    }\r\n\r\n    if (isWeiXin()) {\r\n      if (this.state.wxAudioLocalId) {\r\n        wx.uploadVoice({\r\n          localId: this.state.wxAudioLocalId, // 需要上传的音频的本地ID，由stopRecord接口获得\r\n          isShowProgressTips: 1, // 默认为1，显示进度提示\r\n          success: (res) => {\r\n            values.wx_audio = res.serverId; // 返回音频的服务器端ID\r\n            values.audio = 0\r\n            func(values)\r\n          }\r\n        });\r\n      } else {\r\n        values.audio = 0\r\n        func(values)\r\n      }\r\n    } else {\r\n      if (this.state.audioBlod) {\r\n        let formData = new FormData();\r\n        formData.append('upfile', this.state.audioBlod, 'test.wav')\r\n        uploadAudio(formData).then(data => {\r\n          values.audio = data.id\r\n          func(values)\r\n        })\r\n      } else {\r\n        values.audio = 0\r\n        func(values)\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  previewResult = () => {\r\n    this.writeForm.props.form.validateFields({ force: true }, (errors, values) => {\r\n      if (!errors) {\r\n        this.setState({\r\n          resultPreviewFlag: true,\r\n          formData: Object.assign({}, this.state.formData, { ...this.writeForm.props.form.getFieldsValue(), created_at: parseTime(new Date()), audioUrl: this.state.audioUrl, wxAudioLocalId: this.state.wxAudioLocalId })\r\n        })\r\n      } else {\r\n        for (let x in errors) {\r\n          let error = errors[x];\r\n          Toast.info(error.errors[0].message)\r\n          return\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  returnEdit = () => {\r\n    this.setState({\r\n      resultPreviewFlag: false\r\n    })\r\n  }\r\n\r\n  getCodeUrl = () => {\r\n    if (!this.codeLock) {\r\n      this.codeLock = true;\r\n      getCodeUrl().then(res => {\r\n        this.codeLock = false\r\n        this.setState({\r\n          formData: Object.assign({}, this.state.formData, { captcha_url: res.img }),\r\n          codeKey: res.key\r\n        })\r\n      }).catch(e => {\r\n        this.codeLock = false\r\n      })\r\n    }\r\n  }\r\n\r\n  setImageFile = (files, data) => {\r\n    let imgFileId = null\r\n    if (data) {\r\n      imgFileId = data.id\r\n    }\r\n    this.setState({\r\n      formData: Object.assign({}, this.state.formData, { files }),\r\n      imgFileId\r\n    })\r\n  }\r\n\r\n  setAudioUrl = (blob, type) => {\r\n    if (type == 'wx') {\r\n      this.setState({\r\n        wxAudioLocalId: blob\r\n      })\r\n    } else {\r\n      if (blob) {\r\n        this.setState({\r\n          audioBlod: blob,\r\n          audioUrl: URL.createObjectURL(blob)\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    let { previewFlag, previewImgArr, previewImgIndex, bgUrl, resultPreviewFlag, formData } = this.state\r\n\r\n    return (\r\n      <div className=\"write-wrap\">\r\n        {\r\n          previewFlag ? <WxImageViewer onClose={this.previewClose} urls={previewImgArr} index={previewImgIndex} /> : null\r\n        }\r\n        <div><img className=\"top-bg\" src={bgUrl}></img></div>\r\n        <div className=\"main\">\r\n          {\r\n            resultPreviewFlag ? <PreviewForm previewImg={this.previewImg} formData={formData}></PreviewForm> : <WriteForm formData={formData} previewImg={this.previewImg} setImageFile={this.setImageFile} getCodeUrl={this.getCodeUrl} setAudioUrl={this.setAudioUrl} previwe wrappedComponentRef={(form) => this.writeForm = form}></WriteForm>\r\n          }\r\n        </div>\r\n        <div className=\"fixed-bottom\">\r\n          {\r\n            resultPreviewFlag ? <div className=\"wrap\">\r\n              <Button onClick={this.returnEdit}>返回修改</Button>\r\n              <Button onClick={this.formSubmit}>确认提交</Button>\r\n            </div> : <Button onClick={this.previewResult}>预览</Button>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default WriteSecre","import React from 'react'\r\nimport { InputItem, Toast, Button } from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport { getSecret, getBgUrl } from '@/api'\r\nimport WxImageViewer from 'react-wx-images-viewer';\r\nimport { staticHost2ApiHost } from '@/utils/env'\r\nimport PreviewForm from './components/previewForm'\r\nimport { isWeiXin } from '../../utils/util';\r\nconst wx = window.wx\r\nclass CheckSecre extends React.Component {\r\n  state = {\r\n    check_status: 'off',\r\n    audioUrl: '',\r\n    audioStatus: 0,\r\n    secretInfo: {},\r\n    previewFlag: false,\r\n    previewImgArr: [],\r\n    previewImgIndex: 0,\r\n    bgUrl: ''\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getBgUrl()\r\n  }\r\n\r\n  getBgUrl = () => {\r\n    getBgUrl().then(res => {\r\n      let data = res.data;\r\n      if (data && data.length != 0) {\r\n        let bgUrl = staticHost2ApiHost() + data[0].rel_image.path;\r\n        this.setState({\r\n          bgUrl\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  getInfo(phone) {\r\n    getSecret(phone).then(res => {\r\n      let data = res.data;\r\n      if (data.rel_audio) {\r\n        data.audioUrl = staticHost2ApiHost() + data.rel_audio.path\r\n      }\r\n      if (data.rel_thumb) {\r\n        data.files = [{ url: staticHost2ApiHost() + data.rel_thumb.path }]\r\n      }\r\n      if(isWeiXin()){\r\n        if (data.wx_audio) {\r\n          wx.downloadVoice({\r\n            serverId: data.wx_audio, // 需要下载的音频的服务器端ID，由uploadVoice接口获得\r\n            isShowProgressTips: 1, // 默认为1，显示进度提示\r\n            success: (res) => {\r\n              data.wxAudioLocalId = res.localId\r\n              this.setState({\r\n                check_status: 'on',\r\n                secretInfo: data\r\n              })\r\n            },\r\n            fail: (e) => {\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            check_status: 'on',\r\n            secretInfo: data\r\n          })\r\n        }\r\n      }else{\r\n        this.setState({\r\n          check_status: 'on',\r\n          secretInfo: data\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.props.form.validateFields({ force: true }, (errors, values) => {\r\n      if (!errors) {\r\n        // this.setState({\r\n        //   check_status: 'on'\r\n        // })\r\n        values.phone = values.phone.toString().replace(/\\s*/g, '')\r\n        this.getInfo(values.phone)\r\n      } else {\r\n        for (let x in errors) {\r\n          let error = errors[x];\r\n          Toast.info(error.errors[0].message)\r\n          return\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  previewImg = (url) => {\r\n    this.setState({\r\n      previewFlag: true,\r\n      previewImgArr: [url],\r\n      previewImgIndex: 0\r\n    })\r\n  }\r\n\r\n  previewClose = () => {\r\n    this.setState({\r\n      previewFlag: false\r\n    })\r\n  }\r\n\r\n  gotoHelpCenter = () => {\r\n    this.props.history.push('/helpCenter')\r\n  }\r\n\r\n  render() {\r\n    let { check_status, secretInfo, previewFlag, previewImgArr, previewImgIndex, bgUrl } = this.state;\r\n    const { getFieldProps } = this.props.form;\r\n    return (\r\n      <div className=\"secret-check-wrap\">\r\n        {\r\n          previewFlag ? <WxImageViewer onClose={this.previewClose} urls={previewImgArr} index={previewImgIndex} /> : null\r\n        }\r\n        {\r\n          check_status === 'off' ? <div className=\"secret-check-form-wrap\">\r\n            <div className=\"top\"></div>\r\n            <div className=\"main\">\r\n              <div className=\"tip\">\r\n                <p>您的朋友随礼物还给您留了一段私言密语，您的手机号是查询留言的密码！</p>\r\n                <p>请输入您的手机号码查看TA为您留下的私言密语......</p>\r\n              </div>\r\n              <form className=\"secret-check-form\">\r\n                <div className=\"label\">输入你的手机号码</div>\r\n                <InputItem\r\n                  type=\"phone\"\r\n                  {...getFieldProps('phone', {\r\n                    initialValue: this.state.phone,\r\n                    rules: [\r\n                      { required: true, message: '请输入手机号码' },\r\n                    ],\r\n                  })}\r\n                ></InputItem>\r\n                <Button className=\"search-btn\" size=\"small\" onClick={this.onSubmit}>查看</Button>\r\n              </form>\r\n            </div>\r\n          </div> : <div className=\"result\">\r\n              <div className=\"top\"><img src={bgUrl}></img></div>\r\n              <PreviewForm previewImg={this.previewImg} formData={secretInfo}></PreviewForm>\r\n              <div className=\"fixed-bottom\">\r\n                <a className=\"url-btn\" href=\"//powerionics.jd.com\" target=\"_blank\">我也要挑选礼物送TA</a>\r\n                <span onClick={this.gotoHelpCenter} className=\"help-center\">帮助中心</span>\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default createForm()(CheckSecre)","import layout from '../view/secret/components/layout'\r\nimport writeSecret from '../view/secret/write'\r\nimport checkSecret from '../view/secret/check'\r\nimport helpCenter from '../view/secret/helpCenter'\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        redirect: '/powerionics/write',\r\n        exact:true\r\n    },\r\n    {\r\n        path: '/helpCenter',\r\n        component: helpCenter,\r\n    },\r\n    {\r\n        path: '/powerionics',\r\n        component: layout,\r\n        routes: [\r\n            {\r\n                path: '/powerionics/write',\r\n                component: writeSecret\r\n            },\r\n            {\r\n                path: '/powerionics/check',\r\n                component: checkSecret\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default routes\r\n","import React from 'react'\r\nimport helpImage from '../../assets/images/help_center.jpg'\r\n\r\nclass HelpCenter extends React.Component {\r\n\r\n  render() {\r\n      return <div>\r\n          <img src={helpImage}></img>\r\n      </div>\r\n  }\r\n}\r\nexport default HelpCenter","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { getWxConfig } from '@/api';\r\nexport function initWxConfig(config) {\r\n    let url = window.location.href.split('#')[0]\r\n    getWxConfig(url).then(res => {\r\n        let {\r\n            appId,\r\n            timestamp,\r\n            nonceStr,\r\n            signature,\r\n        } = res.data;\r\n        window.wx.config({\r\n            debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\r\n            appId,\r\n            timestamp,\r\n            nonceStr,\r\n            signature,\r\n            jsApiList: ['translateVoice', 'startRecord', 'stopRecord', 'onVoiceRecordEnd', 'playVoice', 'pauseVoice', 'stopVoice', 'onVoicePlayEnd', 'uploadVoice', 'downloadVoice'], // 必填，需要使用的JS接口列表\r\n        });\r\n    })\r\n}","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { HashRouter as Router, Route,Redirect } from 'react-router-dom'\r\nimport routes from './routes/index'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { initWxConfig } from '@/utils/wx';\r\nimport '@/assets/styles/index.scss'\r\nimport 'lib-flexible/flexible'\r\n\r\ninitWxConfig()\r\n\r\nReactDom.render((\r\n    <Router>\r\n        {\r\n            routes.map((route, index) => {\r\n                return <Route key={index} exact={route.exact} path={route.path} render={props => (\r\n                    route.redirect? <Redirect to={route.redirect}/> :<route.component {...props} routes={route.routes} />\r\n                )}></Route>\r\n            })\r\n        }\r\n    </Router>\r\n), document.querySelector('#root'))\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}