{"version":3,"sources":["assets/images/bg.jpg","utils/rem.js","utils/util.js","view/secret/components/layout.js","utils/recorder.js","utils/request.js","utils/env.js","api/index.js","view/secret/write.js","view/secret/check.js","routes/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","doc","win","docEl","documentElement","resizeEvt","window","recalc","clientWidth","rem","style","fontSize","addEventListener","document","queryUrlParam","str","name","reg","RegExp","indexOf","r","split","match","setLocal","key","value","localStorage","setItem","removeLocal","removeItem","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bgUrl","props","history","location","search","setState","testBg","getBgUrl","getAuth","bgStyle","backgroundImage","concat","react_default","a","createElement","id","routes","map","route","index","react_router","exact","path","render","component","assign","React","Component","Recorder","source","cfg","config","bufferLen","numChannels","mimeType","recording","callbacks","getBuffer","exportWAV","context","node","createScriptProcessor","createJavaScriptNode","onaudioprocess","e","buffer","channel","push","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","InlineWorker","sampleRate","recLength","recBuffers","initBuffers","mergeBuffers","result","Float32Array","offset","i","length","set","writeString","view","string","setUint8","charCodeAt","onmessage","data","record","type","interleaved","buffers","inputL","inputR","inputIndex","interleave","dataview","samples","ArrayBuffer","DataView","setUint32","setUint16","output","input","s","Math","max","min","setInt16","floatTo16BitPCM","encodeWAV","audioBlob","Blob","cb","pop","createClass","callback","Error","blob","filename","url","URL","webkitURL","createObjectURL","link","href","download","click","createEvent","initEvent","dispatchEvent","pending","cancelToken","axios","CancelToken","removePending","u","method","f","splice","service","create","baseURL","localhost","hostname","params","interceptors","request","use","toast_default","loading","c","error","Promise","reject","response","res","hide","code","info","message","getSecret","mobile","saveSecret","uploadAudio","file","headers","Content-Type","uploadImage","WriteSecre","_this$state","audioStatus","recorder","clearTimeout","timer","func","_this$state2","setTimeout","stopRecording","audio_context","AudioContext","webkitAudioContext","navigator","getUserMedia","webkitGetUserMedia","mediaDevices","audio","then","stream","startUserMedia","catch","JSON","stringify","form","getFieldsValue","reload","validateIdp","rule","date","previewImg","fs","previewFlag","previewImgArr","previewImgIndex","previewClose","onChange","files","formData","FormData","append","imgFileId","onSubmit","validateFields","force","errors","values","x","thumb","replace","audioBlod","disabled","cacheData","getItem","parse","objectSpread","createMediaStreamSource","_this2","stop","audioUrl","clear","_this3","_this$state3","_this$props$form","getFieldProps","getFieldError","dist_default","onClose","urls","className","list_default","renderHeader","button_default","size","onClick","controls","src","textarea_item_default","rows","initialValue","say_to_you","rules","required","image_picker_default","onImageClick","selectable","multiple","input_item_default","username","order_code","placeholder","createForm","CheckSecre","check_status","secretInfo","phone","toString","playAudio","getElementById","volume","play","pause","getInfo","created_at","target","layout","writeSecret","isLocalhost","Boolean","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDom","react_router_dom","querySelector","process","origin","fetch","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.975f7d8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.b1a2b9fa.jpg\";",";(function(doc, win) {\r\n    var docEl = doc.documentElement,\r\n      resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize',\r\n      recalc = function() {\r\n        var clientWidth = docEl.clientWidth\r\n        if (!clientWidth) return\r\n        if(clientWidth>800){\r\n          clientWidth = 800\r\n        }\r\n        var rem = clientWidth / 375 * 16\r\n        docEl.style.fontSize = rem + 'px'\r\n      }\r\n    if (!doc.addEventListener) return\r\n    win.addEventListener(resizeEvt, recalc, false)\r\n    doc.addEventListener('DOMContentLoaded', recalc, false)\r\n  })(document, window)","//格式化时间\r\nconst parseTime = (time, cFormat) => {\r\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n  let date\r\n  if (typeof time === 'object') {\r\n    date = time\r\n  } else {\r\n    time = time.replace(/-/g, '/')\r\n    if (('' + time).length === 10) time = parseInt(time) * 1000\r\n    date = new Date(time)\r\n  }\r\n  const formatObj = {\r\n    y: date.getFullYear(),\r\n    m: date.getMonth() + 1,\r\n    d: date.getDate(),\r\n    h: date.getHours(),\r\n    i: date.getMinutes(),\r\n    s: date.getSeconds(),\r\n    a: date.getDay()\r\n  }\r\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n    let value = formatObj[key]\r\n    // Note: getDay() returns 0 on Sunday\r\n    if (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }\r\n    if (result.length > 0 && value < 10) {\r\n      value = '0' + value\r\n    }\r\n    return value || 0\r\n  })\r\n  return time_str\r\n}\r\n/**\r\n* 获取queryString*\r\n*/\r\nconst queryUrlParam = (str,name) => {\r\n  var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i');\r\n  if (str.indexOf('?') >= 0) {\r\n    var r = str.split(\"?\")[1].match(reg);\r\n    if (r != null) return (r[2]);\r\n    return null;\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * 本地储存\r\n * @param {*} key \r\n * @param {*} value \r\n */\r\nconst setLocal = (key, value) => {\r\n  return window.localStorage.setItem(key, value)\r\n}\r\n\r\n/**\r\n * 获取本地储存\r\n * @param {*} key \r\n */\r\nconst getLocal = (key) => {\r\n  return window.localStorage.getItem(key)\r\n}\r\n\r\n/**\r\n * 移除某个本地储存\r\n * @param {*} key \r\n */\r\nconst removeLocal = (key) => {\r\n  return window.localStorage.removeItem(key)\r\n}\r\n\r\n\r\nexport {\r\n  parseTime,\r\n  queryUrlParam,\r\n  setLocal,\r\n  getLocal,\r\n  removeLocal\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { queryUrlParam } from '@/utils/util'\r\nimport testBg from '@/assets/images/bg.jpg'\r\nimport '../styles/layout.scss'\r\nimport '../styles/form.scss'\r\n\r\nexport default class extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            bgUrl: ''\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        let bgUrl = queryUrlParam(this.props.history.location.search,'bg');\r\n        if(bgUrl){\r\n            this.setState({\r\n                bgUrl:testBg\r\n            })\r\n        }else{\r\n            this.getBgUrl();\r\n        }\r\n\r\n        this.getAuth()\r\n        \r\n    }\r\n    getAuth(){\r\n        \r\n    }\r\n    getBgUrl() {\r\n        this.setState({\r\n            bgUrl: ''\r\n        })\r\n    }\r\n    render() {\r\n        const bgStyle = {\r\n            backgroundImage:`url(${this.state.bgUrl})`,\r\n        }\r\n        return (\r\n            <div id=\"secret-wrap\" style={bgStyle}>\r\n                {\r\n                    this.props.routes.map((route, index) => {\r\n                        return <Route key={index} exact={route.exact} path={route.path} render={props => (\r\n                            <route.component {...props} routes={route.routes} />\r\n                        )} ></Route>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import InlineWorker from 'inline-worker';\r\n\r\nexport class Recorder {\r\n    config = {\r\n        bufferLen: 4096,\r\n        numChannels: 2,\r\n        mimeType: 'audio/wav'\r\n    };\r\n\r\n    recording = false;\r\n\r\n    callbacks = {\r\n        getBuffer: [],\r\n        exportWAV: []\r\n    };\r\n\r\n    constructor(source, cfg) {\r\n        Object.assign(this.config, cfg);\r\n        this.context = source.context;\r\n        this.node = (this.context.createScriptProcessor ||\r\n        this.context.createJavaScriptNode).call(this.context,\r\n            this.config.bufferLen, this.config.numChannels, this.config.numChannels);\r\n\r\n        this.node.onaudioprocess = (e) => {\r\n            if (!this.recording) return;\r\n\r\n            var buffer = [];\r\n            for (var channel = 0; channel < this.config.numChannels; channel++) {\r\n                buffer.push(e.inputBuffer.getChannelData(channel));\r\n            }\r\n            this.worker.postMessage({\r\n                command: 'record',\r\n                buffer: buffer\r\n            });\r\n        };\r\n\r\n        source.connect(this.node);\r\n        this.node.connect(this.context.destination);    //this should not be necessary\r\n\r\n        let self = {};\r\n        this.worker = new InlineWorker(function () {\r\n            let recLength = 0,\r\n                recBuffers = [],\r\n                sampleRate,\r\n                numChannels;\r\n\r\n            this.onmessage = function (e) {\r\n                switch (e.data.command) {\r\n                    case 'init':\r\n                        init(e.data.config);\r\n                        break;\r\n                    case 'record':\r\n                        record(e.data.buffer);\r\n                        break;\r\n                    case 'exportWAV':\r\n                        exportWAV(e.data.type);\r\n                        break;\r\n                    case 'getBuffer':\r\n                        getBuffer();\r\n                        break;\r\n                    case 'clear':\r\n                        clear();\r\n                        break;\r\n                }\r\n            };\r\n\r\n            function init(config) {\r\n                sampleRate = config.sampleRate;\r\n                numChannels = config.numChannels;\r\n                initBuffers();\r\n            }\r\n\r\n            function record(inputBuffer) {\r\n                for (var channel = 0; channel < numChannels; channel++) {\r\n                    recBuffers[channel].push(inputBuffer[channel]);\r\n                }\r\n                recLength += inputBuffer[0].length;\r\n            }\r\n\r\n            function exportWAV(type) {\r\n                let buffers = [];\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n                }\r\n                let interleaved;\r\n                if (numChannels === 2) {\r\n                    interleaved = interleave(buffers[0], buffers[1]);\r\n                } else {\r\n                    interleaved = buffers[0];\r\n                }\r\n                let dataview = encodeWAV(interleaved);\r\n                let audioBlob = new Blob([dataview], {type: type});\r\n\r\n                this.postMessage({command: 'exportWAV', data: audioBlob});\r\n            }\r\n\r\n            function getBuffer() {\r\n                let buffers = [];\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\r\n                }\r\n                this.postMessage({command: 'getBuffer', data: buffers});\r\n            }\r\n\r\n            function clear() {\r\n                recLength = 0;\r\n                recBuffers = [];\r\n                initBuffers();\r\n            }\r\n\r\n            function initBuffers() {\r\n                for (let channel = 0; channel < numChannels; channel++) {\r\n                    recBuffers[channel] = [];\r\n                }\r\n            }\r\n\r\n            function mergeBuffers(recBuffers, recLength) {\r\n                let result = new Float32Array(recLength);\r\n                let offset = 0;\r\n                for (let i = 0; i < recBuffers.length; i++) {\r\n                    result.set(recBuffers[i], offset);\r\n                    offset += recBuffers[i].length;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function interleave(inputL, inputR) {\r\n                let length = inputL.length + inputR.length;\r\n                let result = new Float32Array(length);\r\n\r\n                let index = 0,\r\n                    inputIndex = 0;\r\n\r\n                while (index < length) {\r\n                    result[index++] = inputL[inputIndex];\r\n                    result[index++] = inputR[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function floatTo16BitPCM(output, offset, input) {\r\n                for (let i = 0; i < input.length; i++, offset += 2) {\r\n                    let s = Math.max(-1, Math.min(1, input[i]));\r\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\r\n                }\r\n            }\r\n\r\n            function writeString(view, offset, string) {\r\n                for (let i = 0; i < string.length; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            function encodeWAV(samples) {\r\n                let buffer = new ArrayBuffer(44 + samples.length * 2);\r\n                let view = new DataView(buffer);\r\n\r\n                /* RIFF identifier */\r\n                writeString(view, 0, 'RIFF');\r\n                /* RIFF chunk length */\r\n                view.setUint32(4, 36 + samples.length * 2, true);\r\n                /* RIFF type */\r\n                writeString(view, 8, 'WAVE');\r\n                /* format chunk identifier */\r\n                writeString(view, 12, 'fmt ');\r\n                /* format chunk length */\r\n                view.setUint32(16, 16, true);\r\n                /* sample format (raw) */\r\n                view.setUint16(20, 1, true);\r\n                /* channel count */\r\n                view.setUint16(22, numChannels, true);\r\n                /* sample rate */\r\n                view.setUint32(24, sampleRate, true);\r\n                /* byte rate (sample rate * block align) */\r\n                view.setUint32(28, sampleRate * 4, true);\r\n                /* block align (channel count * bytes per sample) */\r\n                view.setUint16(32, numChannels * 2, true);\r\n                /* bits per sample */\r\n                view.setUint16(34, 16, true);\r\n                /* data chunk identifier */\r\n                writeString(view, 36, 'data');\r\n                /* data chunk length */\r\n                view.setUint32(40, samples.length * 2, true);\r\n\r\n                floatTo16BitPCM(view, 44, samples);\r\n\r\n                return view;\r\n            }\r\n        }, self);\r\n\r\n        this.worker.postMessage({\r\n            command: 'init',\r\n            config: {\r\n                sampleRate: this.context.sampleRate,\r\n                numChannels: this.config.numChannels\r\n            }\r\n        });\r\n\r\n        this.worker.onmessage = (e) => {\r\n            let cb = this.callbacks[e.data.command].pop();\r\n            if (typeof cb == 'function') {\r\n                cb(e.data.data);\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    record() {\r\n        this.recording = true;\r\n    }\r\n\r\n    stop() {\r\n        this.recording = false;\r\n    }\r\n\r\n    clear() {\r\n        this.worker.postMessage({command: 'clear'});\r\n    }\r\n\r\n    getBuffer(cb) {\r\n        cb = cb || this.config.callback;\r\n        if (!cb) throw new Error('Callback not set');\r\n\r\n        this.callbacks.getBuffer.push(cb);\r\n\r\n        this.worker.postMessage({command: 'getBuffer'});\r\n    }\r\n\r\n    exportWAV(cb, mimeType) {\r\n        mimeType = mimeType || this.config.mimeType;\r\n        cb = cb || this.config.callback;\r\n        if (!cb) throw new Error('Callback not set');\r\n\r\n        this.callbacks.exportWAV.push(cb);\r\n\r\n        this.worker.postMessage({\r\n            command: 'exportWAV',\r\n            type: mimeType\r\n        });\r\n    }\r\n\r\n    static\r\n    forceDownload(blob, filename) {\r\n        let url = (window.URL || window.webkitURL).createObjectURL(blob);\r\n        let link = window.document.createElement('a');\r\n        link.href = url;\r\n        link.download = filename || 'output.wav';\r\n        let click = document.createEvent(\"Event\");\r\n        click.initEvent(\"click\", true, true);\r\n        link.dispatchEvent(click);\r\n    }\r\n}\r\n\r\nexport default Recorder;\r\n","import axios from 'axios'\r\nimport { staticHost2ApiHost } from './env'\r\nimport { Toast } from 'antd-mobile';\r\n// axios.defaults.withCredentials = true;\r\n\r\nlet pending = []; //声明一个数组用于存储每个ajax请求的取消函数和ajax标识\r\nlet cancelToken = axios.CancelToken;\r\nlet removePending = (config) => {\r\n    for(let p in pending){\r\n        if(pending[p].u == config.url + '&' + config.method) { //当当前请求在数组中存在时执行函数体\r\n            pending[p].f(); //执行取消操作\r\n            pending.splice(p, 1); //把这条记录从数组中移除\r\n        }\r\n    }\r\n}\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: staticHost2ApiHost(), // api 的 base_url\r\n  // timeout: 5000, // 请求超时时间\r\n  // headers: {\r\n  //   'Content-Type': 'application/json',\r\n  //   'X-Requested-With': 'XMLHttpRequest',\r\n  // },\r\n  params: {}\r\n})\r\n// request拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    Toast.loading('', 0)\r\n    removePending(config); //在一个ajax发送前执行一下取消操作\r\n    config.cancelToken = new cancelToken((c)=>{\r\n        // 这里的ajax标识我是用请求地址&请求方式拼接的字符串，当然你可以选择其他的一些方式\r\n        pending.push({ u: config.url + '&' + config.method, f: c });  \r\n    });\r\n    // Object.assign(config.params,{requestId:new Date().getTime()+''+parseInt(Math.random*1000),appType:20})\r\n    return config\r\n  },\r\n  error => {\r\n    Promise.reject(error)\r\n  }\r\n)\r\n\r\n// response 拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    let res = response.data;\r\n    Toast.hide()\r\n    removePending(response.config);  //在一个ajax响应后再执行一下取消操作，把已经完成的请求从pending中移除\r\n    if (res.code != 0) {\r\n      Toast.info(res.data,1)\r\n      return Promise.reject(res)\r\n    } else {\r\n      return response.data\r\n    }\r\n  },\r\n  error => {\r\n    Toast.hide()\r\n    Toast.info(error.message,1)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n","export function staticHost2ApiHost() {\r\n    var mHost = window.location.hostname\r\n    return {\r\n        'localhost': 'http://shequgouvip.com:18003',\r\n    }[mHost] || 'http://shequgouvip.com:18003'\r\n}","import request from '@/utils/request'\r\n\r\nconst getSecret = (mobile) => {\r\n  return request({\r\n    url: '/api/speech/info-mobile',\r\n    method: 'get',\r\n    params:{\r\n      mobile\r\n    }\r\n  })\r\n}\r\n\r\n\r\nconst saveSecret = (data) => {\r\n  return request({\r\n    url: '/api/speech',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n\r\n/**\r\n * 上传语音\r\n * @param {*} data \r\n */\r\nconst uploadAudio = (file) => {\r\n  return request({\r\n    url: '/static/ueditor/1.4.3.3/php/controller.php?action=uploadvideo',\r\n    method: 'post',\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    data: file\r\n  })\r\n}\r\n\r\n/**\r\n * 上传图片\r\n * @param {*} file \r\n */\r\nconst uploadImage = (file) => {\r\n  return request({\r\n    url: '/static/ueditor/1.4.3.3/php/controller.php?action=uploadimage',\r\n    method: 'post',\r\n    headers: {'Content-Type':'multipart/form-data'},\r\n    data: file\r\n  })\r\n}\r\n\r\n\r\nexport {\r\n  getSecret,\r\n  saveSecret,\r\n  uploadAudio,\r\n  uploadImage\r\n}","import React from 'react'\r\nimport { List, InputItem, Toast, Button, ImagePicker, TextareaItem } from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport Recorder from '@/utils/recorder';\r\nimport { setLocal, getLocal, removeLocal } from '@/utils/util'\r\nimport { saveSecret, uploadImage, uploadAudio } from '@/api'\r\nimport WxImageViewer from 'react-wx-images-viewer';\r\n\r\nclass WriteSecre extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      disabled: true,\r\n      files: [],\r\n      imgFileId: null,\r\n      recorder: null,\r\n      audioStatus: 0,\r\n      previewFlag:false,\r\n      previewImgArr:[],\r\n      previewImgIndex:0\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    let cacheData = getLocal('_secret_');\r\n    if (cacheData) {\r\n      cacheData = JSON.parse(cacheData)\r\n      this.setState({\r\n        ...cacheData\r\n      })\r\n      removeLocal('_secret_')\r\n    }\r\n    clearTimeout(this.timer)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer)\r\n  }\r\n\r\n  startUserMedia(audio_context, stream, callback) {\r\n    let input = audio_context.createMediaStreamSource(stream);\r\n    this.setState({\r\n      recorder: new Recorder(input)\r\n    }, () => {\r\n      callback && callback()\r\n    })\r\n  }\r\n\r\n  stopRecording() {\r\n    let { recorder } = this.state;\r\n    recorder.stop();\r\n    recorder.exportWAV((blob) => {\r\n      this.setState({\r\n        audioBlod: blob,\r\n        audioUrl: URL.createObjectURL(blob),\r\n        audioStatus: 2\r\n      })\r\n    });\r\n\r\n    recorder.clear();\r\n  }\r\n\r\n  record = () => {\r\n    let { audioStatus, recorder } = this.state;\r\n    clearTimeout(this.timer)\r\n\r\n    const func = () => {\r\n      let { audioStatus, recorder } = this.state;\r\n      if (audioStatus == 0 || audioStatus == 2) {\r\n        this.setState({\r\n          audioStatus: 1\r\n        })\r\n        recorder.record();\r\n        clearTimeout(this.timer)\r\n        this.timer = setTimeout(() => {\r\n          this.stopRecording()\r\n        }, 30000)\r\n      } else if (audioStatus == 1) {\r\n        this.stopRecording()\r\n      }\r\n    }\r\n\r\n    if (audioStatus == 0 && !recorder) {\r\n      let audio_context = null\r\n      try {\r\n        // webkit shim\r\n        window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;\r\n        window.URL = window.URL || window.webkitURL;\r\n\r\n        audio_context = new AudioContext;\r\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\r\n          removeLocal('_secret_')\r\n          this.startUserMedia(audio_context, stream, func)\r\n        }).catch(e => {\r\n          setLocal('_secret_', JSON.stringify(this.props.form.getFieldsValue()))\r\n          window.location.reload();\r\n        });\r\n      } catch (e) {\r\n        Toast.info('该浏览器不支持录音,请用其他浏览器打开')\r\n      }\r\n\r\n    } else {\r\n      func()\r\n    }\r\n\r\n  }\r\n\r\n  validateIdp = (rule, date, callback) => {\r\n    if (date == 1) {\r\n      callback(new Error('Invalid Date'));\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  previewImg = (fs) => {\r\n    this.setState({\r\n      previewFlag:true,\r\n      previewImgArr:[fs[0].url],\r\n      previewImgIndex:0\r\n    })\r\n  }\r\n\r\n  previewClose = () => {\r\n    this.setState({\r\n      previewFlag:false\r\n    })\r\n  }\r\n\r\n  onChange = (files, type, index) => {\r\n    if (files.length != 0) {\r\n      let file = files[0].file;\r\n      let formData = new FormData();\r\n      formData.append('upfile', file)\r\n      uploadImage(formData).then(data => {\r\n        this.setState({\r\n          files,\r\n          imgFileId: data.id\r\n        });\r\n      })\r\n    } else {\r\n      this.setState({\r\n        files,\r\n        imgFileId: null\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.props.form.validateFields({ force: true }, (errors, values) => {\r\n      if (!errors) {\r\n        if(this.state.imgFileId){\r\n          values.thumb = this.state.imgFileId\r\n        }\r\n        values.mobile = values.mobile.replace(/\\s*/g, '');\r\n        \r\n        if(this.state.audioBlod){\r\n          let formData = new FormData();\r\n          formData.append('upfile', this.state.audioBlod, 'test.wav')\r\n          uploadAudio(formData).then(data => {\r\n            values.audio = data.id\r\n            saveSecret(values).then(res => {\r\n              this.props.history.push(`/secret/check?phone=${values.mobile}`)\r\n            })\r\n          })\r\n        }else{\r\n          saveSecret(values).then(res => {\r\n            this.props.history.push(`/secret/check?phone=${values.mobile}`)\r\n          })\r\n        }\r\n        \r\n      } else {\r\n        for (let x in errors) {\r\n          let error = errors[x];\r\n          Toast.info(error.errors[0].message)\r\n          return\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { files, audioStatus, audioUrl, previewFlag, previewImgArr, previewImgIndex } = this.state\r\n    const { getFieldProps, getFieldError } = this.props.form;\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          previewFlag?<WxImageViewer onClose={this.previewClose} urls={previewImgArr} index={previewImgIndex}/>:null\r\n        }\r\n        <form className=\"secret-wirte-form\">\r\n          <List className=\"no-bg\" renderHeader={() => {\r\n            return (\r\n              <div>\r\n                <p className=\"label\">录制语音：</p>\r\n                <p>限30秒</p>\r\n              </div>\r\n            )\r\n          }}>\r\n            <div className=\"audio-wrap\">\r\n              <Button size=\"small\" type=\"primary\" onClick={this.record}>{audioStatus == 0 ? '开始' : (audioStatus == 1 ? '结束' : '重录')}</Button>\r\n              {\r\n                audioUrl ? <audio controls src={audioUrl}></audio> : null\r\n              }\r\n            </div>\r\n          </List>\r\n          <List renderHeader={() => {\r\n            return (\r\n              <div>\r\n                <p className=\"label\">我想对您说：</p>\r\n                <p>填写您想对TA说的话，不限字数</p>\r\n              </div>\r\n            )\r\n          }}>\r\n            <TextareaItem\r\n              rows=\"2\"\r\n              {...getFieldProps('say_to_you', {\r\n                initialValue: this.state.say_to_you,\r\n                rules: [\r\n                  { required: true, message: '请输入对TA说的话' },\r\n                ],\r\n              })}\r\n            ></TextareaItem>\r\n          </List>\r\n\r\n          <List className=\"no-bg bg-list\" renderHeader={() => {\r\n            return (\r\n              <div>\r\n                <p className=\"label\">永恒一刻：</p>\r\n                <p>选填项！上传您想分享的图片，可选择上传或不上传！</p>\r\n              </div>\r\n            )\r\n          }}>\r\n            <ImagePicker\r\n              files={files}\r\n              onChange={this.onChange}\r\n              onImageClick={(index, fs) => this.previewImg(fs)}\r\n              selectable={files.length < 1}\r\n              multiple={false}\r\n            />\r\n          </List>\r\n\r\n          <List renderHeader={() => {\r\n            return (\r\n              <div>\r\n                <p className=\"label\">送卡人姓名/昵称：</p>\r\n                <p>选填项！如果您不想让对方知道是谁，可不填！</p>\r\n              </div>\r\n            )\r\n          }}>\r\n            <InputItem\r\n              {...getFieldProps('username', {\r\n                initialValue: this.state.username\r\n              })}\r\n            ></InputItem>\r\n\r\n          </List>\r\n\r\n          <List renderHeader={() => {\r\n            return (\r\n              <div>\r\n                <p className=\"label\">powerionics淘宝或京东订单编号：</p>\r\n                <p>可在您的淘宝京东订单内查询复制！</p>\r\n              </div>\r\n            )\r\n          }}>\r\n            <InputItem\r\n              {...getFieldProps('order_code', {\r\n                initialValue: this.state.order_code,\r\n                rules: [\r\n                  { required: true, message: '请输入订单编号' }\r\n                ],\r\n              })}\r\n            ></InputItem>\r\n          </List>\r\n\r\n          <List renderHeader={() => {\r\n            return (\r\n              <div>\r\n                <p className=\"label\">手机号码：</p>\r\n                <p>必填项！请填写收卡人的手机号，此手机号即为对方查询留言的唯一密码，请核对无误！</p>\r\n              </div>\r\n            )\r\n          }}>\r\n            <InputItem\r\n              type=\"phone\"\r\n              placeholder=\"对方手机号码\"\r\n              {...getFieldProps('mobile', {\r\n                initialValue: this.state.mobile,\r\n                rules: [\r\n                  { required: true, message: '请输入对方手机号码' },\r\n                ]\r\n              })}\r\n            ></InputItem>\r\n          </List>\r\n\r\n          {/* <List className=\"no-bg\" renderHeader={() => {\r\n            return (\r\n              <div>\r\n                <p className=\"label\">验证码：</p>\r\n              </div>\r\n            )\r\n          }}>\r\n            <div className=\"code-wrap\">\r\n              <InputItem\r\n                placeholder=\"\"\r\n                {...getFieldProps('code', {\r\n                  initialValue: this.state.code,\r\n                  // rules: [\r\n                  //   { required: true, message: '' },\r\n                  // ],\r\n                })}\r\n              ></InputItem>\r\n              <div className=\"\">1234</div>\r\n            </div>\r\n          </List> */}\r\n\r\n          <Button className=\"fixed-bottom-btn\" type=\"primary\" onClick={this.onSubmit}>提交</Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default createForm()(WriteSecre)","import React from 'react'\r\nimport { InputItem, Toast, Button } from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport { queryUrlParam } from '@/utils/util'\r\nimport { getSecret } from '@/api'\r\nimport WxImageViewer from 'react-wx-images-viewer';\r\n\r\nclass CheckSecre extends React.Component {\r\n  state = {\r\n    check_status: 'off',\r\n    audioUrl: '',\r\n    audioStatus: 0,\r\n    secretInfo: {},\r\n    previewFlag: false,\r\n    previewImgArr: [],\r\n    previewImgIndex: 0\r\n  }\r\n\r\n  componentWillMount() {\r\n    let phone = queryUrlParam(this.props.history.location.search, 'phone')\r\n    if (phone) {\r\n      this.getInfo(phone)\r\n    }\r\n  }\r\n\r\n\r\n  getInfo(phone) {\r\n    getSecret(phone).then(res => {\r\n      this.setState({\r\n        check_status: 'on',\r\n        secretInfo: res.data\r\n      })\r\n    })\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.props.form.validateFields({ force: true }, (errors, values) => {\r\n      if (!errors) {\r\n        // this.setState({\r\n        //   check_status: 'on'\r\n        // })\r\n        values.phone = values.phone.toString().replace(/\\s*/g, '')\r\n        getSecret(values.phone).then(res => {\r\n          this.setState({\r\n            check_status: 'on',\r\n            secretInfo: res.data\r\n          })\r\n        })\r\n      } else {\r\n        for (let x in errors) {\r\n          let error = errors[x];\r\n          Toast.info(error.errors[0].message)\r\n          return\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // let audio = document.getElementById('my_audio')\r\n    // audio.addEventListener('ended', () => {\r\n    //   this.setState({\r\n    //     audioStatus: 3\r\n    //   })\r\n    // }, false)\r\n  }\r\n\r\n  playAudio = () => {\r\n    let audio = document.getElementById('my_audio')\r\n    audio.volume = 1;\r\n    let { audioStatus } = this.state\r\n    if (audioStatus == 0) {\r\n      audio.play()\r\n      this.setState({\r\n        audioStatus: 1\r\n      })\r\n    } else if (audioStatus == 1) {\r\n      this.setState({\r\n        audioStatus: 2\r\n      })\r\n      audio.pause()\r\n    } else if (audioStatus == 2) {\r\n      audio.play()\r\n      this.setState({\r\n        audioStatus: 1\r\n      })\r\n    } else if (audioStatus == 3) {\r\n      audio.play()\r\n      this.setState({\r\n        audioStatus: 1\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  previewImg = () => {\r\n    this.setState({\r\n      previewFlag: true,\r\n      previewImgArr: [this.state.secretInfo.thumb],\r\n      previewImgIndex: 0\r\n    })\r\n  }\r\n\r\n  previewClose = () => {\r\n    this.setState({\r\n      previewFlag: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { check_status, audioStatus, secretInfo, previewFlag, previewImgArr, previewImgIndex } = this.state;\r\n    let { created_at, audio, say_to_you, thumb, username } = secretInfo\r\n    const { getFieldProps } = this.props.form;\r\n    return (\r\n      <div className=\"secret-check-wrap\">\r\n        {\r\n          previewFlag ? <WxImageViewer onClose={this.previewClose} urls={previewImgArr} index={previewImgIndex} /> : null\r\n        }\r\n        {\r\n          check_status === 'off' ? <div className=\"secret-check-form-wrap\">\r\n            <div className=\"tip\">\r\n              <p>您的朋友随礼物还给您留了一段私言密语，您的手机号是查询留言的密码！</p>\r\n              <p>请输入您的手机号码查看TA为您留下的私言密语......</p>\r\n            </div>\r\n            <form className=\"secret-check-form\">\r\n              <InputItem\r\n                type=\"phone\"\r\n                {...getFieldProps('phone', {\r\n                  initialValue: this.state.phone,\r\n                  rules: [\r\n                    { required: true, message: '请输入手机号码' },\r\n                  ],\r\n                })}\r\n              >手机号码：</InputItem>\r\n              <Button className=\"search-btn\" size=\"small\" type=\"primary\" onClick={this.onSubmit}>查询</Button>\r\n            </form>\r\n          </div> : <div className=\"result\">\r\n              <div className=\"item\">\r\n                <p className=\"label\">语音消息：</p>\r\n                <p className=\"content light\">\r\n                  <Button onClick={this.playAudio}>{(audioStatus == 0 || audioStatus == 2) ? '播放' : (audioStatus == 3 ? '重播' : '暂停')}</Button>\r\n                  <audio id=\"my_audio\" src={audio}></audio>\r\n                </p>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p className=\"label\">我想对您说：</p>\r\n                <p className=\"content light\">{say_to_you}</p>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p className=\"label\">永恒一刻：</p>\r\n                <p className=\"content\">\r\n                  <img onClick={this.previewImg} src={thumb} />\r\n                </p>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p className=\"label\">送卡人姓名/昵称：</p>\r\n                <p className=\"content\">{username}</p>\r\n              </div>\r\n              <div className=\"item\">\r\n                <p className=\"label\">提交时间：</p>\r\n                <p className=\"content\">{created_at}</p>\r\n              </div>\r\n\r\n              <a className=\"url-btn\" href=\"//www.baidu.com\" target=\"_blank\">我也要挑选礼物送TA</a>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default createForm()(CheckSecre)","import layout from '../view/secret/components/layout'\r\nimport writeSecret from '../view/secret/write'\r\nimport checkSecret from '../view/secret/check'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/secret',\r\n        component: layout,\r\n        routes: [\r\n            {\r\n                path: '/secret/write',\r\n                component: writeSecret\r\n            },\r\n            {\r\n                path: '/secret/check',\r\n                component: checkSecret\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default routes\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport routes from './routes/index'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@/utils';\r\nimport '@/assets/styles/index.scss'\r\n\r\nReactDom.render((\r\n    <Router>\r\n            {\r\n                routes.map((route, index) => {\r\n                    return <Route key={index} exact={route.exact} path={route.path} render={props => (\r\n                        <route.component {...props} routes={route.routes} />\r\n                    )}></Route>\r\n                })\r\n            }\r\n    </Router>\r\n), document.querySelector('#root'))\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}